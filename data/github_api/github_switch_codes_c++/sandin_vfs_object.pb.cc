// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: object.proto

#include "object.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace vfs {
constexpr PathRequest::PathRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct PathRequestDefaultTypeInternal {
  constexpr PathRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PathRequestDefaultTypeInternal() {}
  union {
    PathRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PathRequestDefaultTypeInternal _PathRequest_default_instance_;
constexpr ABObject::ABObject(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , mimetype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , servername_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , dbpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , fulldbpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , checkoutpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , localpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , workingpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , serverpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lockedat_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , createdat_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , createdby_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lockedby_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lockedon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , checkoutcomment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lowlevellockedon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lowlevellockedby_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lowlevellockedat_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , lowlevellockcomment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , checkincomment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , comment_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , keywords_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , author_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sfsz_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , scrc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userfolder_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , userhandle_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , usersession_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , usermachine_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nxnsignoff_itemstatus_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nxnsignoff_itemduedate_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nxnsignoff_itemuser_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , changedby_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , parentpath_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , nxn_versionnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , color_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , flags_(0)
  , dblevel_(0)
  , handle_(int64_t{0})
  , parenthandle_(int64_t{0})
  , childcount_(int64_t{0})
  , scrt_(int64_t{0})
  , smot_(int64_t{0})
  , scit_(int64_t{0})
  , simt_(int64_t{0})
  , scot_(int64_t{0})
  , changedat_(int64_t{0})
  , isdirectory_(false)
  , localonly_(false){}
struct ABObjectDefaultTypeInternal {
  constexpr ABObjectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ABObjectDefaultTypeInternal() {}
  union {
    ABObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ABObjectDefaultTypeInternal _ABObject_default_instance_;
}  // namespace vfs
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_object_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_object_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_object_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_object_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vfs::PathRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::vfs::PathRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::vfs::PathRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, flags_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, name_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, dblevel_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, handle_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, parenthandle_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, childcount_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, mimetype_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, servername_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, dbpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, fulldbpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, checkoutpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, localpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, workingpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, serverpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lockedat_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, createdat_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, createdby_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lockedby_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lockedon_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, checkoutcomment_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lowlevellockedon_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lowlevellockedby_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lowlevellockedat_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, lowlevellockcomment_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, checkincomment_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, comment_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, keywords_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, author_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, sfsz_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, scrc_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, scrt_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, smot_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, scit_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, simt_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, scot_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, userfolder_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, userhandle_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, usersession_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, usermachine_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, username_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, nxnsignoff_itemstatus_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, nxnsignoff_itemduedate_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, nxnsignoff_itemuser_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, changedat_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, changedby_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, parentpath_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, nxn_versionnumber_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, isdirectory_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, localonly_),
  PROTOBUF_FIELD_OFFSET(::vfs::ABObject, color_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::vfs::PathRequest)},
  { 9, -1, -1, sizeof(::vfs::ABObject)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vfs::_PathRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::vfs::_ABObject_default_instance_),
};

const char descriptor_table_protodef_object_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014object.proto\022\003vfs\"7\n\013PathRequest\022\016\n\004na"
  "me\030\001 \001(\tH\000\022\020\n\006handle\030\002 \001(\003H\000B\006\n\004path\"\347\007\n"
  "\010ABObject\022\r\n\005flags\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\017"
  "\n\007dbLevel\030\003 \001(\005\022\016\n\006handle\030\004 \001(\003\022\024\n\014paren"
  "tHandle\030\005 \001(\003\022\022\n\nchildCount\030\006 \001(\003\022\020\n\010mim"
  "eType\030\007 \001(\t\022\022\n\nserverName\030\010 \001(\t\022\016\n\006dbPat"
  "h\030\t \001(\t\022\022\n\nfullDbPath\030\n \001(\t\022\024\n\014checkOutP"
  "ath\030\013 \001(\t\022\021\n\tlocalPath\030\014 \001(\t\022\023\n\013workingP"
  "ath\030\r \001(\t\022\022\n\nserverPath\030\016 \001(\t\022\020\n\010lockedA"
  "t\030\017 \001(\t\022\021\n\tcreatedAt\030\020 \001(\t\022\021\n\tcreatedBy\030"
  "\021 \001(\t\022\020\n\010lockedBy\030\022 \001(\t\022\020\n\010lockedOn\030\023 \001("
  "\t\022\027\n\017checkOutComment\030\024 \001(\t\022\030\n\020lowLevelLo"
  "ckedOn\030\025 \001(\t\022\030\n\020lowLevelLockedBy\030\026 \001(\t\022\030"
  "\n\020lowLevelLockedAt\030\027 \001(\t\022\033\n\023lowLevelLock"
  "Comment\030\030 \001(\t\022\026\n\016checkInComment\030\031 \001(\t\022\017\n"
  "\007comment\030\032 \001(\t\022\020\n\010keywords\030\033 \001(\t\022\016\n\006auth"
  "or\030\034 \001(\t\022\014\n\004SFSZ\030\035 \001(\t\022\014\n\004SCRC\030\036 \001(\t\022\014\n\004"
  "SCRT\030\037 \001(\003\022\014\n\004SMOT\030  \001(\003\022\014\n\004SCIT\030! \001(\003\022\014"
  "\n\004SIMT\030\" \001(\003\022\014\n\004SCOT\030# \001(\003\022\022\n\nuserFolder"
  "\030$ \001(\t\022\022\n\nuserHandle\030% \001(\t\022\023\n\013userSessio"
  "n\030& \001(\t\022\023\n\013userMachine\030\' \001(\t\022\020\n\010userName"
  "\030( \001(\t\022\035\n\025nxNSignOff_ItemStatus\030) \001(\t\022\036\n"
  "\026nxNSignOff_ItemDueDate\030* \001(\t\022\033\n\023nxNSign"
  "Off_ItemUser\030+ \001(\t\022\021\n\tchangedAt\030, \001(\003\022\021\n"
  "\tchangedBy\030- \001(\t\022\022\n\nparentPath\030. \001(\t\022\031\n\021"
  "nxN_VersionNumber\030/ \001(\t\022\023\n\013isDirectory\0300"
  " \001(\010\022\021\n\tlocalOnly\0301 \001(\010\022\r\n\005color\0302 \001(\t2t"
  "\n\013NameService\0224\n\rListDirectory\022\020.vfs.Pat"
  "hRequest\032\r.vfs.ABObject\"\0000\001\022/\n\nFindObjec"
  "t\022\020.vfs.PathRequest\032\r.vfs.ABObject\"\000b\006pr"
  "oto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_object_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_object_2eproto = {
  false, false, 1204, descriptor_table_protodef_object_2eproto, "object.proto", 
  &descriptor_table_object_2eproto_once, nullptr, 0, 2,
  schemas, file_default_instances, TableStruct_object_2eproto::offsets,
  file_level_metadata_object_2eproto, file_level_enum_descriptors_object_2eproto, file_level_service_descriptors_object_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_object_2eproto_getter() {
  return &descriptor_table_object_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_object_2eproto(&descriptor_table_object_2eproto);
namespace vfs {

// ===================================================================

class PathRequest::_Internal {
 public:
};

PathRequest::PathRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:vfs.PathRequest)
}
PathRequest::PathRequest(const PathRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_path();
  switch (from.path_case()) {
    case kName: {
      _internal_set_name(from._internal_name());
      break;
    }
    case kHandle: {
      _internal_set_handle(from._internal_handle());
      break;
    }
    case PATH_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:vfs.PathRequest)
}

void PathRequest::SharedCtor() {
clear_has_path();
}

PathRequest::~PathRequest() {
  // @@protoc_insertion_point(destructor:vfs.PathRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PathRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_path()) {
    clear_path();
  }
}

void PathRequest::ArenaDtor(void* object) {
  PathRequest* _this = reinterpret_cast< PathRequest* >(object);
  (void)_this;
}
void PathRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PathRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PathRequest::clear_path() {
// @@protoc_insertion_point(one_of_clear_start:vfs.PathRequest)
  switch (path_case()) {
    case kName: {
      path_.name_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
      break;
    }
    case kHandle: {
      // No need to clear
      break;
    }
    case PATH_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATH_NOT_SET;
}


void PathRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:vfs.PathRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_path();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PathRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.PathRequest.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 handle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_handle(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PathRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vfs.PathRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.PathRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 handle = 2;
  if (_internal_has_handle()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vfs.PathRequest)
  return target;
}

size_t PathRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vfs.PathRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (path_case()) {
    // string name = 1;
    case kName: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
      break;
    }
    // int64 handle = 2;
    case kHandle: {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_handle());
      break;
    }
    case PATH_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PathRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PathRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PathRequest::GetClassData() const { return &_class_data_; }

void PathRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PathRequest *>(to)->MergeFrom(
      static_cast<const PathRequest &>(from));
}


void PathRequest::MergeFrom(const PathRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vfs.PathRequest)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.path_case()) {
    case kName: {
      _internal_set_name(from._internal_name());
      break;
    }
    case kHandle: {
      _internal_set_handle(from._internal_handle());
      break;
    }
    case PATH_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PathRequest::CopyFrom(const PathRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vfs.PathRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathRequest::IsInitialized() const {
  return true;
}

void PathRequest::InternalSwap(PathRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(path_, other->path_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PathRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_object_2eproto_getter, &descriptor_table_object_2eproto_once,
      file_level_metadata_object_2eproto[0]);
}

// ===================================================================

class ABObject::_Internal {
 public:
};

ABObject::ABObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:vfs.ABObject)
}
ABObject::ABObject(const ABObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mimetype().empty()) {
    mimetype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mimetype(), 
      GetArenaForAllocation());
  }
  servername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_servername().empty()) {
    servername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_servername(), 
      GetArenaForAllocation());
  }
  dbpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dbpath().empty()) {
    dbpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_dbpath(), 
      GetArenaForAllocation());
  }
  fulldbpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fulldbpath().empty()) {
    fulldbpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fulldbpath(), 
      GetArenaForAllocation());
  }
  checkoutpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checkoutpath().empty()) {
    checkoutpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_checkoutpath(), 
      GetArenaForAllocation());
  }
  localpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_localpath().empty()) {
    localpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_localpath(), 
      GetArenaForAllocation());
  }
  workingpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_workingpath().empty()) {
    workingpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_workingpath(), 
      GetArenaForAllocation());
  }
  serverpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_serverpath().empty()) {
    serverpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_serverpath(), 
      GetArenaForAllocation());
  }
  lockedat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lockedat().empty()) {
    lockedat_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lockedat(), 
      GetArenaForAllocation());
  }
  createdat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_createdat().empty()) {
    createdat_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_createdat(), 
      GetArenaForAllocation());
  }
  createdby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_createdby().empty()) {
    createdby_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_createdby(), 
      GetArenaForAllocation());
  }
  lockedby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lockedby().empty()) {
    lockedby_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lockedby(), 
      GetArenaForAllocation());
  }
  lockedon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lockedon().empty()) {
    lockedon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lockedon(), 
      GetArenaForAllocation());
  }
  checkoutcomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checkoutcomment().empty()) {
    checkoutcomment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_checkoutcomment(), 
      GetArenaForAllocation());
  }
  lowlevellockedon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lowlevellockedon().empty()) {
    lowlevellockedon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lowlevellockedon(), 
      GetArenaForAllocation());
  }
  lowlevellockedby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lowlevellockedby().empty()) {
    lowlevellockedby_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lowlevellockedby(), 
      GetArenaForAllocation());
  }
  lowlevellockedat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lowlevellockedat().empty()) {
    lowlevellockedat_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lowlevellockedat(), 
      GetArenaForAllocation());
  }
  lowlevellockcomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_lowlevellockcomment().empty()) {
    lowlevellockcomment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_lowlevellockcomment(), 
      GetArenaForAllocation());
  }
  checkincomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_checkincomment().empty()) {
    checkincomment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_checkincomment(), 
      GetArenaForAllocation());
  }
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_comment().empty()) {
    comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comment(), 
      GetArenaForAllocation());
  }
  keywords_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keywords().empty()) {
    keywords_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_keywords(), 
      GetArenaForAllocation());
  }
  author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_author().empty()) {
    author_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_author(), 
      GetArenaForAllocation());
  }
  sfsz_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sfsz().empty()) {
    sfsz_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sfsz(), 
      GetArenaForAllocation());
  }
  scrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_scrc().empty()) {
    scrc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_scrc(), 
      GetArenaForAllocation());
  }
  userfolder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userfolder().empty()) {
    userfolder_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_userfolder(), 
      GetArenaForAllocation());
  }
  userhandle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_userhandle().empty()) {
    userhandle_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_userhandle(), 
      GetArenaForAllocation());
  }
  usersession_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_usersession().empty()) {
    usersession_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_usersession(), 
      GetArenaForAllocation());
  }
  usermachine_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_usermachine().empty()) {
    usermachine_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_usermachine(), 
      GetArenaForAllocation());
  }
  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_username().empty()) {
    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), 
      GetArenaForAllocation());
  }
  nxnsignoff_itemstatus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nxnsignoff_itemstatus().empty()) {
    nxnsignoff_itemstatus_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nxnsignoff_itemstatus(), 
      GetArenaForAllocation());
  }
  nxnsignoff_itemduedate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nxnsignoff_itemduedate().empty()) {
    nxnsignoff_itemduedate_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nxnsignoff_itemduedate(), 
      GetArenaForAllocation());
  }
  nxnsignoff_itemuser_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nxnsignoff_itemuser().empty()) {
    nxnsignoff_itemuser_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nxnsignoff_itemuser(), 
      GetArenaForAllocation());
  }
  changedby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_changedby().empty()) {
    changedby_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_changedby(), 
      GetArenaForAllocation());
  }
  parentpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parentpath().empty()) {
    parentpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_parentpath(), 
      GetArenaForAllocation());
  }
  nxn_versionnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_nxn_versionnumber().empty()) {
    nxn_versionnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_nxn_versionnumber(), 
      GetArenaForAllocation());
  }
  color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_color().empty()) {
    color_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_color(), 
      GetArenaForAllocation());
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&localonly_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(localonly_));
  // @@protoc_insertion_point(copy_constructor:vfs.ABObject)
}

void ABObject::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
mimetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
servername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
dbpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
fulldbpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
checkoutpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
localpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
workingpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
serverpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lockedat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
createdat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
createdby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lockedby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lockedon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
checkoutcomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lowlevellockedon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lowlevellockedby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lowlevellockedat_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
lowlevellockcomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
checkincomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
keywords_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
author_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
sfsz_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
scrc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
userfolder_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
userhandle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
usersession_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
usermachine_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nxnsignoff_itemstatus_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nxnsignoff_itemduedate_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nxnsignoff_itemuser_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
changedby_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
parentpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
nxn_versionnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
color_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&flags_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&localonly_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(localonly_));
}

ABObject::~ABObject() {
  // @@protoc_insertion_point(destructor:vfs.ABObject)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ABObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mimetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  servername_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dbpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fulldbpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkoutpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  localpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  workingpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  serverpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lockedat_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createdat_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  createdby_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lockedby_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lockedon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkoutcomment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lowlevellockedon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lowlevellockedby_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lowlevellockedat_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  lowlevellockcomment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  checkincomment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keywords_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  author_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sfsz_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  scrc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userfolder_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userhandle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usersession_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  usermachine_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nxnsignoff_itemstatus_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nxnsignoff_itemduedate_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nxnsignoff_itemuser_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  changedby_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parentpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  nxn_versionnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  color_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ABObject::ArenaDtor(void* object) {
  ABObject* _this = reinterpret_cast< ABObject* >(object);
  (void)_this;
}
void ABObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ABObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ABObject::Clear() {
// @@protoc_insertion_point(message_clear_start:vfs.ABObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  mimetype_.ClearToEmpty();
  servername_.ClearToEmpty();
  dbpath_.ClearToEmpty();
  fulldbpath_.ClearToEmpty();
  checkoutpath_.ClearToEmpty();
  localpath_.ClearToEmpty();
  workingpath_.ClearToEmpty();
  serverpath_.ClearToEmpty();
  lockedat_.ClearToEmpty();
  createdat_.ClearToEmpty();
  createdby_.ClearToEmpty();
  lockedby_.ClearToEmpty();
  lockedon_.ClearToEmpty();
  checkoutcomment_.ClearToEmpty();
  lowlevellockedon_.ClearToEmpty();
  lowlevellockedby_.ClearToEmpty();
  lowlevellockedat_.ClearToEmpty();
  lowlevellockcomment_.ClearToEmpty();
  checkincomment_.ClearToEmpty();
  comment_.ClearToEmpty();
  keywords_.ClearToEmpty();
  author_.ClearToEmpty();
  sfsz_.ClearToEmpty();
  scrc_.ClearToEmpty();
  userfolder_.ClearToEmpty();
  userhandle_.ClearToEmpty();
  usersession_.ClearToEmpty();
  usermachine_.ClearToEmpty();
  username_.ClearToEmpty();
  nxnsignoff_itemstatus_.ClearToEmpty();
  nxnsignoff_itemduedate_.ClearToEmpty();
  nxnsignoff_itemuser_.ClearToEmpty();
  changedby_.ClearToEmpty();
  parentpath_.ClearToEmpty();
  nxn_versionnumber_.ClearToEmpty();
  color_.ClearToEmpty();
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&localonly_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(localonly_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ABObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 dbLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          dblevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 handle = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 parentHandle = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          parenthandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 childCount = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          childcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string mimeType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_mimetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.mimeType"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string serverName = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_servername();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.serverName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string dbPath = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_dbpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.dbPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string fullDbPath = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_fulldbpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.fullDbPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string checkOutPath = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_checkoutpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.checkOutPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string localPath = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_localpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.localPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string workingPath = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_workingpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.workingPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string serverPath = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_serverpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.serverPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lockedAt = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_lockedat();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lockedAt"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string createdAt = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_createdat();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.createdAt"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string createdBy = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          auto str = _internal_mutable_createdby();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.createdBy"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lockedBy = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_lockedby();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lockedBy"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lockedOn = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_lockedon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lockedOn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string checkOutComment = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_checkoutcomment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.checkOutComment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lowLevelLockedOn = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_lowlevellockedon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lowLevelLockedOn"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lowLevelLockedBy = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_lowlevellockedby();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lowLevelLockedBy"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lowLevelLockedAt = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          auto str = _internal_mutable_lowlevellockedat();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lowLevelLockedAt"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string lowLevelLockComment = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_lowlevellockcomment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.lowLevelLockComment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string checkInComment = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          auto str = _internal_mutable_checkincomment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.checkInComment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string comment = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_comment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.comment"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string keywords = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          auto str = _internal_mutable_keywords();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.keywords"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string author = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 226)) {
          auto str = _internal_mutable_author();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.author"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SFSZ = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_sfsz();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.SFSZ"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SCRC = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_scrc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.SCRC"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 SCRT = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          scrt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 SMOT = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          smot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 SCIT = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          scit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 SIMT = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          simt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 SCOT = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          scot_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userFolder = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_userfolder();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.userFolder"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userHandle = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_userhandle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.userHandle"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userSession = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_usersession();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.userSession"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userMachine = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_usermachine();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.userMachine"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string userName = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_username();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.userName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nxNSignOff_ItemStatus = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_nxnsignoff_itemstatus();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.nxNSignOff_ItemStatus"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nxNSignOff_ItemDueDate = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_nxnsignoff_itemduedate();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.nxNSignOff_ItemDueDate"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nxNSignOff_ItemUser = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_nxnsignoff_itemuser();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.nxNSignOff_ItemUser"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 changedAt = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          changedat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string changedBy = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_changedby();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.changedBy"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string parentPath = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_parentpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.parentPath"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string nxN_VersionNumber = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_nxn_versionnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.nxN_VersionNumber"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool isDirectory = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          isdirectory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool localOnly = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          localonly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string color = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_color();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "vfs.ABObject.color"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ABObject::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:vfs.ABObject)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 flags = 1;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_flags(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // int32 dbLevel = 3;
  if (this->_internal_dblevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_dblevel(), target);
  }

  // int64 handle = 4;
  if (this->_internal_handle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_handle(), target);
  }

  // int64 parentHandle = 5;
  if (this->_internal_parenthandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_parenthandle(), target);
  }

  // int64 childCount = 6;
  if (this->_internal_childcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_childcount(), target);
  }

  // string mimeType = 7;
  if (!this->_internal_mimetype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mimetype().data(), static_cast<int>(this->_internal_mimetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.mimeType");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_mimetype(), target);
  }

  // string serverName = 8;
  if (!this->_internal_servername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_servername().data(), static_cast<int>(this->_internal_servername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.serverName");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_servername(), target);
  }

  // string dbPath = 9;
  if (!this->_internal_dbpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dbpath().data(), static_cast<int>(this->_internal_dbpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.dbPath");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_dbpath(), target);
  }

  // string fullDbPath = 10;
  if (!this->_internal_fulldbpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fulldbpath().data(), static_cast<int>(this->_internal_fulldbpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.fullDbPath");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_fulldbpath(), target);
  }

  // string checkOutPath = 11;
  if (!this->_internal_checkoutpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkoutpath().data(), static_cast<int>(this->_internal_checkoutpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.checkOutPath");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_checkoutpath(), target);
  }

  // string localPath = 12;
  if (!this->_internal_localpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_localpath().data(), static_cast<int>(this->_internal_localpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.localPath");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_localpath(), target);
  }

  // string workingPath = 13;
  if (!this->_internal_workingpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workingpath().data(), static_cast<int>(this->_internal_workingpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.workingPath");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_workingpath(), target);
  }

  // string serverPath = 14;
  if (!this->_internal_serverpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_serverpath().data(), static_cast<int>(this->_internal_serverpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.serverPath");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_serverpath(), target);
  }

  // string lockedAt = 15;
  if (!this->_internal_lockedat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lockedat().data(), static_cast<int>(this->_internal_lockedat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lockedAt");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_lockedat(), target);
  }

  // string createdAt = 16;
  if (!this->_internal_createdat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_createdat().data(), static_cast<int>(this->_internal_createdat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.createdAt");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_createdat(), target);
  }

  // string createdBy = 17;
  if (!this->_internal_createdby().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_createdby().data(), static_cast<int>(this->_internal_createdby().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.createdBy");
    target = stream->WriteStringMaybeAliased(
        17, this->_internal_createdby(), target);
  }

  // string lockedBy = 18;
  if (!this->_internal_lockedby().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lockedby().data(), static_cast<int>(this->_internal_lockedby().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lockedBy");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_lockedby(), target);
  }

  // string lockedOn = 19;
  if (!this->_internal_lockedon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lockedon().data(), static_cast<int>(this->_internal_lockedon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lockedOn");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_lockedon(), target);
  }

  // string checkOutComment = 20;
  if (!this->_internal_checkoutcomment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkoutcomment().data(), static_cast<int>(this->_internal_checkoutcomment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.checkOutComment");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_checkoutcomment(), target);
  }

  // string lowLevelLockedOn = 21;
  if (!this->_internal_lowlevellockedon().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lowlevellockedon().data(), static_cast<int>(this->_internal_lowlevellockedon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lowLevelLockedOn");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_lowlevellockedon(), target);
  }

  // string lowLevelLockedBy = 22;
  if (!this->_internal_lowlevellockedby().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lowlevellockedby().data(), static_cast<int>(this->_internal_lowlevellockedby().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lowLevelLockedBy");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_lowlevellockedby(), target);
  }

  // string lowLevelLockedAt = 23;
  if (!this->_internal_lowlevellockedat().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lowlevellockedat().data(), static_cast<int>(this->_internal_lowlevellockedat().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lowLevelLockedAt");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_lowlevellockedat(), target);
  }

  // string lowLevelLockComment = 24;
  if (!this->_internal_lowlevellockcomment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_lowlevellockcomment().data(), static_cast<int>(this->_internal_lowlevellockcomment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.lowLevelLockComment");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_lowlevellockcomment(), target);
  }

  // string checkInComment = 25;
  if (!this->_internal_checkincomment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkincomment().data(), static_cast<int>(this->_internal_checkincomment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.checkInComment");
    target = stream->WriteStringMaybeAliased(
        25, this->_internal_checkincomment(), target);
  }

  // string comment = 26;
  if (!this->_internal_comment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.comment");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_comment(), target);
  }

  // string keywords = 27;
  if (!this->_internal_keywords().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_keywords().data(), static_cast<int>(this->_internal_keywords().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.keywords");
    target = stream->WriteStringMaybeAliased(
        27, this->_internal_keywords(), target);
  }

  // string author = 28;
  if (!this->_internal_author().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_author().data(), static_cast<int>(this->_internal_author().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.author");
    target = stream->WriteStringMaybeAliased(
        28, this->_internal_author(), target);
  }

  // string SFSZ = 29;
  if (!this->_internal_sfsz().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sfsz().data(), static_cast<int>(this->_internal_sfsz().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.SFSZ");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_sfsz(), target);
  }

  // string SCRC = 30;
  if (!this->_internal_scrc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_scrc().data(), static_cast<int>(this->_internal_scrc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.SCRC");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_scrc(), target);
  }

  // int64 SCRT = 31;
  if (this->_internal_scrt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(31, this->_internal_scrt(), target);
  }

  // int64 SMOT = 32;
  if (this->_internal_smot() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(32, this->_internal_smot(), target);
  }

  // int64 SCIT = 33;
  if (this->_internal_scit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(33, this->_internal_scit(), target);
  }

  // int64 SIMT = 34;
  if (this->_internal_simt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(34, this->_internal_simt(), target);
  }

  // int64 SCOT = 35;
  if (this->_internal_scot() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(35, this->_internal_scot(), target);
  }

  // string userFolder = 36;
  if (!this->_internal_userfolder().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userfolder().data(), static_cast<int>(this->_internal_userfolder().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.userFolder");
    target = stream->WriteStringMaybeAliased(
        36, this->_internal_userfolder(), target);
  }

  // string userHandle = 37;
  if (!this->_internal_userhandle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userhandle().data(), static_cast<int>(this->_internal_userhandle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.userHandle");
    target = stream->WriteStringMaybeAliased(
        37, this->_internal_userhandle(), target);
  }

  // string userSession = 38;
  if (!this->_internal_usersession().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usersession().data(), static_cast<int>(this->_internal_usersession().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.userSession");
    target = stream->WriteStringMaybeAliased(
        38, this->_internal_usersession(), target);
  }

  // string userMachine = 39;
  if (!this->_internal_usermachine().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usermachine().data(), static_cast<int>(this->_internal_usermachine().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.userMachine");
    target = stream->WriteStringMaybeAliased(
        39, this->_internal_usermachine(), target);
  }

  // string userName = 40;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.userName");
    target = stream->WriteStringMaybeAliased(
        40, this->_internal_username(), target);
  }

  // string nxNSignOff_ItemStatus = 41;
  if (!this->_internal_nxnsignoff_itemstatus().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nxnsignoff_itemstatus().data(), static_cast<int>(this->_internal_nxnsignoff_itemstatus().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.nxNSignOff_ItemStatus");
    target = stream->WriteStringMaybeAliased(
        41, this->_internal_nxnsignoff_itemstatus(), target);
  }

  // string nxNSignOff_ItemDueDate = 42;
  if (!this->_internal_nxnsignoff_itemduedate().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nxnsignoff_itemduedate().data(), static_cast<int>(this->_internal_nxnsignoff_itemduedate().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.nxNSignOff_ItemDueDate");
    target = stream->WriteStringMaybeAliased(
        42, this->_internal_nxnsignoff_itemduedate(), target);
  }

  // string nxNSignOff_ItemUser = 43;
  if (!this->_internal_nxnsignoff_itemuser().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nxnsignoff_itemuser().data(), static_cast<int>(this->_internal_nxnsignoff_itemuser().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.nxNSignOff_ItemUser");
    target = stream->WriteStringMaybeAliased(
        43, this->_internal_nxnsignoff_itemuser(), target);
  }

  // int64 changedAt = 44;
  if (this->_internal_changedat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(44, this->_internal_changedat(), target);
  }

  // string changedBy = 45;
  if (!this->_internal_changedby().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_changedby().data(), static_cast<int>(this->_internal_changedby().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.changedBy");
    target = stream->WriteStringMaybeAliased(
        45, this->_internal_changedby(), target);
  }

  // string parentPath = 46;
  if (!this->_internal_parentpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parentpath().data(), static_cast<int>(this->_internal_parentpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.parentPath");
    target = stream->WriteStringMaybeAliased(
        46, this->_internal_parentpath(), target);
  }

  // string nxN_VersionNumber = 47;
  if (!this->_internal_nxn_versionnumber().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nxn_versionnumber().data(), static_cast<int>(this->_internal_nxn_versionnumber().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.nxN_VersionNumber");
    target = stream->WriteStringMaybeAliased(
        47, this->_internal_nxn_versionnumber(), target);
  }

  // bool isDirectory = 48;
  if (this->_internal_isdirectory() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(48, this->_internal_isdirectory(), target);
  }

  // bool localOnly = 49;
  if (this->_internal_localonly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(49, this->_internal_localonly(), target);
  }

  // string color = 50;
  if (!this->_internal_color().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_color().data(), static_cast<int>(this->_internal_color().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "vfs.ABObject.color");
    target = stream->WriteStringMaybeAliased(
        50, this->_internal_color(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:vfs.ABObject)
  return target;
}

size_t ABObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:vfs.ABObject)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string mimeType = 7;
  if (!this->_internal_mimetype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mimetype());
  }

  // string serverName = 8;
  if (!this->_internal_servername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_servername());
  }

  // string dbPath = 9;
  if (!this->_internal_dbpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dbpath());
  }

  // string fullDbPath = 10;
  if (!this->_internal_fulldbpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fulldbpath());
  }

  // string checkOutPath = 11;
  if (!this->_internal_checkoutpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkoutpath());
  }

  // string localPath = 12;
  if (!this->_internal_localpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_localpath());
  }

  // string workingPath = 13;
  if (!this->_internal_workingpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workingpath());
  }

  // string serverPath = 14;
  if (!this->_internal_serverpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_serverpath());
  }

  // string lockedAt = 15;
  if (!this->_internal_lockedat().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lockedat());
  }

  // string createdAt = 16;
  if (!this->_internal_createdat().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_createdat());
  }

  // string createdBy = 17;
  if (!this->_internal_createdby().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_createdby());
  }

  // string lockedBy = 18;
  if (!this->_internal_lockedby().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lockedby());
  }

  // string lockedOn = 19;
  if (!this->_internal_lockedon().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lockedon());
  }

  // string checkOutComment = 20;
  if (!this->_internal_checkoutcomment().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkoutcomment());
  }

  // string lowLevelLockedOn = 21;
  if (!this->_internal_lowlevellockedon().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lowlevellockedon());
  }

  // string lowLevelLockedBy = 22;
  if (!this->_internal_lowlevellockedby().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lowlevellockedby());
  }

  // string lowLevelLockedAt = 23;
  if (!this->_internal_lowlevellockedat().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lowlevellockedat());
  }

  // string lowLevelLockComment = 24;
  if (!this->_internal_lowlevellockcomment().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_lowlevellockcomment());
  }

  // string checkInComment = 25;
  if (!this->_internal_checkincomment().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkincomment());
  }

  // string comment = 26;
  if (!this->_internal_comment().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comment());
  }

  // string keywords = 27;
  if (!this->_internal_keywords().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_keywords());
  }

  // string author = 28;
  if (!this->_internal_author().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_author());
  }

  // string SFSZ = 29;
  if (!this->_internal_sfsz().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sfsz());
  }

  // string SCRC = 30;
  if (!this->_internal_scrc().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_scrc());
  }

  // string userFolder = 36;
  if (!this->_internal_userfolder().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userfolder());
  }

  // string userHandle = 37;
  if (!this->_internal_userhandle().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userhandle());
  }

  // string userSession = 38;
  if (!this->_internal_usersession().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usersession());
  }

  // string userMachine = 39;
  if (!this->_internal_usermachine().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usermachine());
  }

  // string userName = 40;
  if (!this->_internal_username().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string nxNSignOff_ItemStatus = 41;
  if (!this->_internal_nxnsignoff_itemstatus().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nxnsignoff_itemstatus());
  }

  // string nxNSignOff_ItemDueDate = 42;
  if (!this->_internal_nxnsignoff_itemduedate().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nxnsignoff_itemduedate());
  }

  // string nxNSignOff_ItemUser = 43;
  if (!this->_internal_nxnsignoff_itemuser().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nxnsignoff_itemuser());
  }

  // string changedBy = 45;
  if (!this->_internal_changedby().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_changedby());
  }

  // string parentPath = 46;
  if (!this->_internal_parentpath().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parentpath());
  }

  // string nxN_VersionNumber = 47;
  if (!this->_internal_nxn_versionnumber().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nxn_versionnumber());
  }

  // string color = 50;
  if (!this->_internal_color().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_color());
  }

  // int32 flags = 1;
  if (this->_internal_flags() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_flags());
  }

  // int32 dbLevel = 3;
  if (this->_internal_dblevel() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_dblevel());
  }

  // int64 handle = 4;
  if (this->_internal_handle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_handle());
  }

  // int64 parentHandle = 5;
  if (this->_internal_parenthandle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_parenthandle());
  }

  // int64 childCount = 6;
  if (this->_internal_childcount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_childcount());
  }

  // int64 SCRT = 31;
  if (this->_internal_scrt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_scrt());
  }

  // int64 SMOT = 32;
  if (this->_internal_smot() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_smot());
  }

  // int64 SCIT = 33;
  if (this->_internal_scit() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_scit());
  }

  // int64 SIMT = 34;
  if (this->_internal_simt() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_simt());
  }

  // int64 SCOT = 35;
  if (this->_internal_scot() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_scot());
  }

  // int64 changedAt = 44;
  if (this->_internal_changedat() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_changedat());
  }

  // bool isDirectory = 48;
  if (this->_internal_isdirectory() != 0) {
    total_size += 2 + 1;
  }

  // bool localOnly = 49;
  if (this->_internal_localonly() != 0) {
    total_size += 2 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ABObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ABObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ABObject::GetClassData() const { return &_class_data_; }

void ABObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ABObject *>(to)->MergeFrom(
      static_cast<const ABObject &>(from));
}


void ABObject::MergeFrom(const ABObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:vfs.ABObject)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_mimetype().empty()) {
    _internal_set_mimetype(from._internal_mimetype());
  }
  if (!from._internal_servername().empty()) {
    _internal_set_servername(from._internal_servername());
  }
  if (!from._internal_dbpath().empty()) {
    _internal_set_dbpath(from._internal_dbpath());
  }
  if (!from._internal_fulldbpath().empty()) {
    _internal_set_fulldbpath(from._internal_fulldbpath());
  }
  if (!from._internal_checkoutpath().empty()) {
    _internal_set_checkoutpath(from._internal_checkoutpath());
  }
  if (!from._internal_localpath().empty()) {
    _internal_set_localpath(from._internal_localpath());
  }
  if (!from._internal_workingpath().empty()) {
    _internal_set_workingpath(from._internal_workingpath());
  }
  if (!from._internal_serverpath().empty()) {
    _internal_set_serverpath(from._internal_serverpath());
  }
  if (!from._internal_lockedat().empty()) {
    _internal_set_lockedat(from._internal_lockedat());
  }
  if (!from._internal_createdat().empty()) {
    _internal_set_createdat(from._internal_createdat());
  }
  if (!from._internal_createdby().empty()) {
    _internal_set_createdby(from._internal_createdby());
  }
  if (!from._internal_lockedby().empty()) {
    _internal_set_lockedby(from._internal_lockedby());
  }
  if (!from._internal_lockedon().empty()) {
    _internal_set_lockedon(from._internal_lockedon());
  }
  if (!from._internal_checkoutcomment().empty()) {
    _internal_set_checkoutcomment(from._internal_checkoutcomment());
  }
  if (!from._internal_lowlevellockedon().empty()) {
    _internal_set_lowlevellockedon(from._internal_lowlevellockedon());
  }
  if (!from._internal_lowlevellockedby().empty()) {
    _internal_set_lowlevellockedby(from._internal_lowlevellockedby());
  }
  if (!from._internal_lowlevellockedat().empty()) {
    _internal_set_lowlevellockedat(from._internal_lowlevellockedat());
  }
  if (!from._internal_lowlevellockcomment().empty()) {
    _internal_set_lowlevellockcomment(from._internal_lowlevellockcomment());
  }
  if (!from._internal_checkincomment().empty()) {
    _internal_set_checkincomment(from._internal_checkincomment());
  }
  if (!from._internal_comment().empty()) {
    _internal_set_comment(from._internal_comment());
  }
  if (!from._internal_keywords().empty()) {
    _internal_set_keywords(from._internal_keywords());
  }
  if (!from._internal_author().empty()) {
    _internal_set_author(from._internal_author());
  }
  if (!from._internal_sfsz().empty()) {
    _internal_set_sfsz(from._internal_sfsz());
  }
  if (!from._internal_scrc().empty()) {
    _internal_set_scrc(from._internal_scrc());
  }
  if (!from._internal_userfolder().empty()) {
    _internal_set_userfolder(from._internal_userfolder());
  }
  if (!from._internal_userhandle().empty()) {
    _internal_set_userhandle(from._internal_userhandle());
  }
  if (!from._internal_usersession().empty()) {
    _internal_set_usersession(from._internal_usersession());
  }
  if (!from._internal_usermachine().empty()) {
    _internal_set_usermachine(from._internal_usermachine());
  }
  if (!from._internal_username().empty()) {
    _internal_set_username(from._internal_username());
  }
  if (!from._internal_nxnsignoff_itemstatus().empty()) {
    _internal_set_nxnsignoff_itemstatus(from._internal_nxnsignoff_itemstatus());
  }
  if (!from._internal_nxnsignoff_itemduedate().empty()) {
    _internal_set_nxnsignoff_itemduedate(from._internal_nxnsignoff_itemduedate());
  }
  if (!from._internal_nxnsignoff_itemuser().empty()) {
    _internal_set_nxnsignoff_itemuser(from._internal_nxnsignoff_itemuser());
  }
  if (!from._internal_changedby().empty()) {
    _internal_set_changedby(from._internal_changedby());
  }
  if (!from._internal_parentpath().empty()) {
    _internal_set_parentpath(from._internal_parentpath());
  }
  if (!from._internal_nxn_versionnumber().empty()) {
    _internal_set_nxn_versionnumber(from._internal_nxn_versionnumber());
  }
  if (!from._internal_color().empty()) {
    _internal_set_color(from._internal_color());
  }
  if (from._internal_flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
  if (from._internal_dblevel() != 0) {
    _internal_set_dblevel(from._internal_dblevel());
  }
  if (from._internal_handle() != 0) {
    _internal_set_handle(from._internal_handle());
  }
  if (from._internal_parenthandle() != 0) {
    _internal_set_parenthandle(from._internal_parenthandle());
  }
  if (from._internal_childcount() != 0) {
    _internal_set_childcount(from._internal_childcount());
  }
  if (from._internal_scrt() != 0) {
    _internal_set_scrt(from._internal_scrt());
  }
  if (from._internal_smot() != 0) {
    _internal_set_smot(from._internal_smot());
  }
  if (from._internal_scit() != 0) {
    _internal_set_scit(from._internal_scit());
  }
  if (from._internal_simt() != 0) {
    _internal_set_simt(from._internal_simt());
  }
  if (from._internal_scot() != 0) {
    _internal_set_scot(from._internal_scot());
  }
  if (from._internal_changedat() != 0) {
    _internal_set_changedat(from._internal_changedat());
  }
  if (from._internal_isdirectory() != 0) {
    _internal_set_isdirectory(from._internal_isdirectory());
  }
  if (from._internal_localonly() != 0) {
    _internal_set_localonly(from._internal_localonly());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ABObject::CopyFrom(const ABObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:vfs.ABObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ABObject::IsInitialized() const {
  return true;
}

void ABObject::InternalSwap(ABObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &mimetype_, lhs_arena,
      &other->mimetype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &servername_, lhs_arena,
      &other->servername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &dbpath_, lhs_arena,
      &other->dbpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &fulldbpath_, lhs_arena,
      &other->fulldbpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &checkoutpath_, lhs_arena,
      &other->checkoutpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &localpath_, lhs_arena,
      &other->localpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &workingpath_, lhs_arena,
      &other->workingpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &serverpath_, lhs_arena,
      &other->serverpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lockedat_, lhs_arena,
      &other->lockedat_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &createdat_, lhs_arena,
      &other->createdat_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &createdby_, lhs_arena,
      &other->createdby_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lockedby_, lhs_arena,
      &other->lockedby_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lockedon_, lhs_arena,
      &other->lockedon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &checkoutcomment_, lhs_arena,
      &other->checkoutcomment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lowlevellockedon_, lhs_arena,
      &other->lowlevellockedon_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lowlevellockedby_, lhs_arena,
      &other->lowlevellockedby_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lowlevellockedat_, lhs_arena,
      &other->lowlevellockedat_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &lowlevellockcomment_, lhs_arena,
      &other->lowlevellockcomment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &checkincomment_, lhs_arena,
      &other->checkincomment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &comment_, lhs_arena,
      &other->comment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &keywords_, lhs_arena,
      &other->keywords_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &author_, lhs_arena,
      &other->author_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sfsz_, lhs_arena,
      &other->sfsz_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &scrc_, lhs_arena,
      &other->scrc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &userfolder_, lhs_arena,
      &other->userfolder_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &userhandle_, lhs_arena,
      &other->userhandle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &usersession_, lhs_arena,
      &other->usersession_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &usermachine_, lhs_arena,
      &other->usermachine_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &username_, lhs_arena,
      &other->username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nxnsignoff_itemstatus_, lhs_arena,
      &other->nxnsignoff_itemstatus_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nxnsignoff_itemduedate_, lhs_arena,
      &other->nxnsignoff_itemduedate_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nxnsignoff_itemuser_, lhs_arena,
      &other->nxnsignoff_itemuser_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &changedby_, lhs_arena,
      &other->changedby_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &parentpath_, lhs_arena,
      &other->parentpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &nxn_versionnumber_, lhs_arena,
      &other->nxn_versionnumber_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &color_, lhs_arena,
      &other->color_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ABObject, localonly_)
      + sizeof(ABObject::localonly_)
      - PROTOBUF_FIELD_OFFSET(ABObject, flags_)>(
          reinterpret_cast<char*>(&flags_),
          reinterpret_cast<char*>(&other->flags_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ABObject::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_object_2eproto_getter, &descriptor_table_object_2eproto_once,
      file_level_metadata_object_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace vfs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::vfs::PathRequest* Arena::CreateMaybeMessage< ::vfs::PathRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vfs::PathRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::vfs::ABObject* Arena::CreateMaybeMessage< ::vfs::ABObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::vfs::ABObject >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
