// Repository: deis/workflow-manager
// File: pkg/swagger/client/operations/get_doctor_info_responses.go

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/deis/workflow-manager/pkg/swagger/models"
)

// GetDoctorInfoReader is a Reader for the GetDoctorInfo structure.
type GetDoctorInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetDoctorInfoReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDoctorInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDoctorInfoDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetDoctorInfoOK creates a GetDoctorInfoOK with default headers values
func NewGetDoctorInfoOK() *GetDoctorInfoOK {
	return &GetDoctorInfoOK{}
}

/*GetDoctorInfoOK handles this case with default header values.

doctor get response
*/
type GetDoctorInfoOK struct {
	Payload *models.DoctorInfo
}

func (o *GetDoctorInfoOK) Error() string {
	return fmt.Sprintf("[GET /v3/doctor/{uuid}][%d] getDoctorInfoOK  %+v", 200, o.Payload)
}

func (o *GetDoctorInfoOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DoctorInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDoctorInfoDefault creates a GetDoctorInfoDefault with default headers values
func NewGetDoctorInfoDefault(code int) *GetDoctorInfoDefault {
	return &GetDoctorInfoDefault{
		_statusCode: code,
	}
}

/*GetDoctorInfoDefault handles this case with default header values.

unexpected error
*/
type GetDoctorInfoDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get doctor info default response
func (o *GetDoctorInfoDefault) Code() int {
	return o._statusCode
}

func (o *GetDoctorInfoDefault) Error() string {
	return fmt.Sprintf("[GET /v3/doctor/{uuid}][%d] getDoctorInfo default  %+v", o._statusCode, o.Payload)
}

func (o *GetDoctorInfoDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
