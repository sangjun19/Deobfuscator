// Repository: symmetryinvestments/faked
// File: source/faked/faker_ru.d

module faked.faker_ru;

import std.algorithm : map, joiner;
import std.array;
import std.conv : to;
import std.exception : enforce;
import std.format;
import std.random;
import std.range : iota, take, repeat;
import std.string : toUpper;
import std.typecons : Nullable, nullable;

import faked.customtypes;
import faked.fakerenums;

import faked.faker_en;

class Faker_ru : Faker_en {
@safe:
	this(int seed) {
		super(seed);
	}

	override string commerceProductNameAdjective() {
		const string[] strs =
		[ q"{Маленький}", q"{Эргономичный}", q"{Грубый}", q"{Интеллектуальный}"
		, q"{Великолепный}", q"{Невероятный}", q"{Свободный}"
		, q"{Большой}", q"{Фантастический}", q"{Практичный}"
		, q"{Лоснящийся}", q"{Потрясающий}" ];

		return choice(strs, this.rnd);
	}

	override string commerceProductNameMaterial() {
		const string[] strs =
		[ q"{Стальной}", q"{Деревянный}", q"{Бетонный}", q"{Пластиковый}"
		, q"{Хлопковый}", q"{Гранитный}", q"{Кожанный}", q"{Неодимовый}"
		, q"{Меховой}", q"{Натуральный}", q"{Резиновый}" ];

		return choice(strs, this.rnd);
	}

	override string commerceProductNameProduct() {
		const string[] strs =
		[ q"{Стул}", q"{Автомобиль}", q"{Компьютер}", q"{Берет}", q"{Кулон}"
		, q"{Стол}", q"{Свитер}", q"{Ремень}", q"{Ножницы}", q"{Носки}"
		, q"{Майка}", q"{Кепка}", q"{Куртка}", q"{Плащ}", q"{Сабо}", q"{Шарф}"
		, q"{Клатч}", q"{Кошелек}", q"{Портмоне}", q"{Ботинок}" ];

		return choice(strs, this.rnd);
	}

	override string commerceDepartment() {
		const string[] strs =
		[ q"{Книги}", q"{Фильмы}", q"{музыка}", q"{игры}", q"{Электроника}"
		, q"{компьютеры}", q"{Дом}", q"{садинструмент}", q"{Бакалея}"
		, q"{здоровье}", q"{красота}", q"{Игрушки}", q"{детское}"
		, q"{для малышей}", q"{Одежда}", q"{обувь}", q"{украшения}"
		, q"{Спорт}", q"{туризм}", q"{Автомобильное}", q"{Галантерея}"
		, q"{Меха}", q"{Пряжа}", q"{промышленное}" ];

		return choice(strs, this.rnd);
	}

	override string companyNamePattern() {
		switch(uniform(0, 8, this.rnd)) {
			case 0: return companyPrefix() ~ " " ~ personFemaleFirstName();
			case 1: return companyPrefix() ~ " " ~ personMaleFirstName();
			case 2: return companyPrefix() ~ " " ~ personMaleLastName();
			case 3: return companyPrefix() ~ " " ~ companySuffix() ~ companySuffix();
			case 4: return companyPrefix() ~ " " ~ companySuffix() ~ companySuffix() ~ companySuffix();
			case 5: return companyPrefix() ~ " " ~ locationCityName() ~ companySuffix();
			case 6: return companyPrefix() ~ " " ~ locationCityName() ~ companySuffix() ~ companySuffix();
			case 7: return companyPrefix() ~ " " ~ locationCityName() ~ companySuffix() ~ companySuffix() ~ companySuffix();
			default: return "";
		}
	}

	override string companySuffix() {
		const string[] strs =
		[ q"{Групп}", q"{Инкорпорэйтед}", q"{Лимитед}", q"{Пром}", q"{Рус}"
		, q"{Системс}", q"{Сбыт}", q"{Снаб}", q"{Торг}", q"{Трейд}" ];

		return choice(strs, this.rnd);
	}

	string companyPrefix() {
		const string[] strs =
		[ q"{AO}", q"{ГУП}", q"{ЗАО}", q"{ИП}", q"{МУП}", q"{НКО}", q"{ОП}", q"{ООО}", q"{ОАО}"
		, q"{ПАО}", q"{ТСЖ}", q"{ФГУП}" ];

		return choice(strs, this.rnd);
	}

	override string dateMonthWide() {
		const string[] strs =
		[ q"{январь}", q"{февраль}", q"{март}", q"{апрель}", q"{май}", q"{июнь}"
		, q"{июль}", q"{август}", q"{сентябрь}", q"{октябрь}", q"{ноябрь}"
		, q"{декабрь}" ];

		return choice(strs, this.rnd);
	}

	override string dateMonthAbbr() {
		const string[] strs =
		[ q"{янв.}", q"{февр.}", q"{март}", q"{апр.}", q"{май}", q"{июнь}", q"{июль}"
		, q"{авг.}", q"{сент.}", q"{окт.}", q"{нояб.}", q"{дек.}" ];

		return choice(strs, this.rnd);
	}

	override string dateWeekdayWide() {
		const string[] strs =
		[ q"{Воскресенье}", q"{Понедельник}", q"{Вторник}", q"{Среда}"
		, q"{Четверг}", q"{Пятница}", q"{Суббота}" ];

		return choice(strs, this.rnd);
	}

	override string dateWeekdayAbbr() {
		const string[] strs =
		[ q"{Вс}", q"{Пн}", q"{Вт}", q"{Ср}", q"{Чт}", q"{Пт}", q"{Сб}" ];

		return choice(strs, this.rnd);
	}

	override string hackerAdjective() {
		const string[] strs =
		[ q"{вспомогательный}", q"{основной}", q"{внутренний}"
		, q"{цифровой}", q"{свободно-распростроняемый}"
		, q"{виртуальный}", q"{кросс-платформенный}", q"{излишний}"
		, q"{онлайн}", q"{сенсорный}", q"{многобайтный}", q"{беспроводной}"
		, q"{1080-пиксельный}", q"{нейронный}", q"{оптический}"
		, q"{твердотельный}", q"{мобильный}" ];

		return choice(strs, this.rnd);
	}

	override string hackerIngverb() {
		const string[] strs =
		[ q"{резервное копирование}", q"{обход}", q"{архивирование}"
		, q"{взлом}", q"{шифрование}", q"{переопределение}", q"{сжатие}"
		, q"{скачивание}", q"{копирование}", q"{навигация}", q"{индексирование}"
		, q"{соединение}", q"{генерация}", q"{определение количества}"
		, q"{вычисление}", q"{синтез}", q"{передача}", q"{программирование}"
		, q"{разбор}" ];

		return choice(strs, this.rnd);
	}

	override string hackerNoun() {
		const string[] strs =
		[ q"{драйвер}", q"{протокол}", q"{ограничитель}", q"{интерфейс}"
		, q"{микрочип}", q"{код}", q"{парсер}", q"{сокет}", q"{кортеж}"
		, q"{порт}", q"{ключ}", q"{массив}", q"{объект}", q"{сенсор}", q"{брандмауэр}"
		, q"{винчестер}", q"{пиксель}", q"{механизм сигнализации}"
		, q"{поглотитель}", q"{монитор}", q"{продукт}", q"{передатчик}"
		, q"{блок разведения}", q"{канал}", q"{конденсатор}"
		, q"{оператор}" ];

		return choice(strs, this.rnd);
	}

	override string hackerPhrase() {
		switch(uniform(0, 8, this.rnd)) {
			case 0: return "Чтобы " ~ hackerVerb() ~ " " ~ hackerNoun() ~ ", мы можем получить " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ " через " ~ hackerAdjective() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ "!";
			case 1: return "Необходимо " ~ hackerVerb() ~ " " ~ hackerAdjective() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ "!";
			case 2: return "Попробуйте " ~ hackerVerb() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ ", возможно это позволит " ~ hackerVerb() ~ " " ~ hackerAdjective() ~ " " ~ hackerNoun() ~ "!";
			case 3: return "Вы не можете " ~ hackerVerb() ~ " " ~ hackerNoun() ~ ", требуется " ~ hackerIngverb() ~ " или " ~ hackerIngverb() ~ "!";
			case 4: return "Используйте " ~ hackerAdjective() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ ", для того чтобы " ~ hackerVerb() ~ " " ~ hackerAdjective() ~ " " ~ hackerNoun() ~ "!";
			case 5: return hackerAbbreviation() ~ " " ~ hackerNoun() ~ " недоступен, требуется " ~ hackerVerb() ~ " " ~ hackerAdjective() ~ " " ~ hackerNoun() ~ ", чтобы мы могли " ~ hackerVerb() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ "!";
			case 6: return hackerIngverb() ~ " не работает, попробуйте " ~ hackerVerb() ~ " " ~ hackerAdjective() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ "!";
			case 7: return "Я планирую " ~ hackerVerb() ~ " " ~ hackerAdjective() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ ", это должно помочь " ~ hackerVerb() ~ " " ~ hackerAbbreviation() ~ " " ~ hackerNoun() ~ "!";
			default: return "";
		}
	}

	override string hackerVerb() {
		const string[] strs =
		[ q"{сохранить}", q"{обойти}", q"{взломать}", q"{переопределить}"
		, q"{сжать}", q"{зашифровать}", q"{импортировать}", q"{экспортировать}"
		, q"{копировать}", q"{навигировать}", q"{индексировать}"
		, q"{соединить}", q"{генерировать}", q"{распарсить}"
		, q"{квантифицировать}", q"{вычислить}", q"{синтезировать}"
		, q"{ввести}", q"{передать}", q"{запрограммировать}"
		, q"{перезагрузить}", q"{разобрать}" ];

		return choice(strs, this.rnd);
	}

	override string hackerAbbreviation() {
		const string[] strs =
		[ q"{БИОС}", q"{Гб}", q"{ИИ}", q"{ОС}", q"{ОЗУ}", q"{ПО}", q"{СУБД}", q"{ХЗ}", q"{ЭВМ}"
		, q"{HTTP}", q"{SDD}", q"{CSS}", q"{SSL}", q"{AGP}", q"{FTP}", q"{PCI}", q"{ADP}", q"{RSS}", q"{XML}", q"{EXE}"
		, q"{COM}", q"{НМЖД}", q"{ПЗУ}", q"{SMTP}", q"{SMS}", q"{USB}", q"{PNG}", q"{SAS}", q"{JSON}"
		, q"{XSS}" ];

		return choice(strs, this.rnd);
	}

	override string internetDomainSuffix() {
		const string[] strs =
		[ q"{biz}", q"{club}", q"{com}", q"{edo}", q"{info}", q"{host}", q"{moscow}", q"{net}", q"{org}", q"{online}"
		, q"{press}", q"{pro}", q"{ru}", q"{rus}", q"{space}", q"{store}", q"{su}", q"{tech}", q"{москва}"
		, q"{онлайн}", q"{рф}", q"{сайт}" ];

		return choice(strs, this.rnd);
	}

	override string internetFreeEmail() {
		const string[] strs =
		[ q"{yandex.ru}", q"{ya.ru}", q"{mail.ru}", q"{gmail.com}", q"{yahoo.com}", q"{hotmail.com}" ];

		return choice(strs, this.rnd);
	}

	override string locationBuildingNumber() {
		const string[] strs =
		[ q"{###}" ];

		return numberBuild(choice(strs, this.rnd));
	}

	override string locationCityName() {
		const string[] strs =
		[ q"{Абакан}", q"{Абинск}", q"{Агата}", q"{Агинское (Забайк.)}"
		, q"{Адлер}", q"{Адыгейск}", q"{Азов (Рост.)}", q"{Алагир}"
		, q"{Алапаевск}", q"{Алдан}", q"{Александров}", q"{Александров Гай}"
		, q"{Александровск}", q"{Александровск-Сахалинский}"
		, q"{Алексин}", q"{Амдерма}", q"{Амурск}", q"{Анадырь}", q"{Анапа}"
		, q"{Ангарск}", q"{Андреаполь}", q"{Анива}", q"{Апатиты}"
		, q"{Апрелевка}", q"{Апшеронск}", q"{Аргаяш}", q"{Ардон}"
		, q"{Арзамас}", q"{Армавир}", q"{Арсеньев}", q"{Артем}", q"{Архангельск}"
		, q"{Архыз}", q"{Аршан (Бурят.)}", q"{Асбест}", q"{Асино}", q"{Астрахань}"
		, q"{Ахтубинск}", q"{Ачинск}", q"{Ачхой Мартан}", q"{Аша}"
		, q"{Бавлы}", q"{Байкальск}", q"{Баксан}", q"{Балашиха}", q"{Балашов}"
		, q"{Балтийск}", q"{Баргузин}", q"{Барнаул}", q"{Батайск}"
		, q"{Белгород}", q"{Белогорск (Амур.)}", q"{Белокуриха}"
		, q"{Беломорск}", q"{Белорецк}", q"{Белореченск}", q"{Белоярский}"
		, q"{Белый Яр (Томск.)}", q"{Березники}", q"{Беслан}", q"{Бийск}"
		, q"{Билибино}", q"{Биробиджан}", q"{Бирск}", q"{Благовещенск (Амур.)}"
		, q"{Богучар}", q"{Бодайбо}", q"{Бологое}", q"{Бомнак}", q"{Борзя}"
		, q"{Боровск}", q"{Братск}", q"{Бреды}", q"{Бронницы}", q"{Брянск}"
		, q"{Бугульма}", q"{Бугуруслан}", q"{Буденновск}", q"{Бузулук}"
		, q"{Буйнакск}", q"{Быково (метеост.)}", q"{Валаам}", q"{Валдай}"
		, q"{Ведено}", q"{Великие Луки}", q"{Великий Устюг}", q"{Вендинга}"
		, q"{Верещагино (Перм.)}", q"{Верхнее Пенжино}", q"{Верхний Баскунчак}"
		, q"{Верхний Тагил}", q"{Верхний Уфалей}", q"{Верхотурье}"
		, q"{Верхоянск}", q"{Видное}", q"{Вилюйск}", q"{Витим}", q"{Владивосток}"
		, q"{Владикавказ}", q"{Владимир}", q"{Внуково (метеост.)}"
		, q"{Волгоград}", q"{Волгодонск}", q"{Вологда}", q"{Волоколамск}"
		, q"{Волхов}", q"{Воркута}", q"{Воронеж}", q"{Воскресенск}"
		, q"{Воткинск}", q"{Всеволожск}", q"{Вуктыл}", q"{Выборг}"
		, q"{Вытегра}", q"{Вязьма}", q"{Гаврилов-Ям}", q"{Гагарин}"
		, q"{Галич}", q"{Гатчина}", q"{Гдов}", q"{Геленджик}", q"{Глазов}"
		, q"{Голицыно}", q"{Горно-Алтайск}", q"{Городовиковск}"
		, q"{Горячий Ключ}", q"{Горячинск}", q"{Гремячинск (Бурят.)}"
		, q"{Гремячинск (Перм.)}", q"{Грозный}", q"{Губаха}", q"{Губкин}"
		, q"{Губкинский}", q"{Гудермес}", q"{Гусь-Хрустальный}"
		, q"{Дагомыс}", q"{Далматово}", q"{Данков}", q"{Двинской}"
		, q"{Дербент}", q"{Джейрах}", q"{Джубга}", q"{Дзержинск}"
		, q"{Дивногорск}", q"{Диксон}", q"{Дмитров}", q"{Дно}", q"{Добрянка}"
		, q"{Долинск}", q"{Домбай}", q"{Домодедово}", q"{Дубна}", q"{Дудинка}"
		, q"{Егорьевск}", q"{Ейск}", q"{Екатеринбург}", q"{Елабуга}"
		, q"{Елатьма}", q"{Елец}", q"{Ельня}", q"{Енисейск}", q"{Ербогачен}"
		, q"{Ершов}", q"{Ессентуки}", q"{Железногорск(Курск.)}"
		, q"{Жиганск}", q"{Жигулевск}", q"{Жуковский}", q"{Забайкальск}"
		, q"{Заводоуковск}", q"{Завьялиха}", q"{Зарайск}", q"{Звенигород}"
		, q"{Зеленогорск (Ленин.)}", q"{Зеленоград}", q"{Златоуст}"
		, q"{Змеиногорск}", q"{Иваново}", q"{Ивдель}", q"{Игарка}"
		, q"{Игнашино}", q"{Ижевск}", q"{Избербаш}", q"{Инта}", q"{Ирбит}"
		, q"{Иркутск}", q"{Истра}", q"{Ишим}", q"{Йошкар-Ола}", q"{Кабанск}"
		, q"{Кажим}", q"{Казань}", q"{Калач}", q"{Калач-на-Дону}", q"{Калачинск}"
		, q"{Калевала}", q"{Калининград}", q"{Калуга}", q"{Калязин}"
		, q"{Каменномостский}", q"{Каменск-Уральский}", q"{Каменск-Шахтинский}"
		, q"{Камень-на-Оби}", q"{Камышин}", q"{Камышлов}", q"{Кандалакша}"
		, q"{Каневская}", q"{Канск}", q"{Карабудахкент}", q"{Карабулак}"
		, q"{Карачаевск}", q"{Каргасок}", q"{Каргополь}", q"{Карпинск}"
		, q"{Карталы}", q"{Касимов}", q"{Каспийск}", q"{Катав-Ивановск}"
		, q"{Катайск}", q"{Качканар}", q"{Кашира}", q"{Кашхатау}"
		, q"{Кедровый}", q"{Кежма}", q"{Кемерово}", q"{Кетченеры}"
		, q"{Кижи}", q"{Кизел}", q"{Кизилюрт}", q"{Кизляр}", q"{Кимры}"
		, q"{Кингисепп}", q"{Кинешма}", q"{Киренск}", q"{Киржач}"
		, q"{Кириши}", q"{Киров (Вятка)}", q"{Кирово-Чепецк}", q"{Кировск (Мурм.)}"
		, q"{Кировск (Ленин.)}", q"{Кисловодск}", q"{Клин}", q"{Ковров}"
		, q"{Когалым}", q"{Коломна}", q"{Колпашево}", q"{Комсомольск-на-Амуре}"
		, q"{Кондопога}", q"{Королев}", q"{Корсаков}", q"{Костомукша}"
		, q"{Кострома}", q"{Котельнич}", q"{Котлас}", q"{Кош-Агач}"
		, q"{Красная Поляна}", q"{Красновишерск}", q"{Красногорск (Моск.)}"
		, q"{Краснодар}", q"{Краснокамск}", q"{Красноселькуп}"
		, q"{Краснотурьинск}", q"{Красноуральск}", q"{Красноуфимск}"
		, q"{Красноярск}", q"{Кропоткин (Краснод.)}", q"{Крымск}"
		, q"{Кудымкар}", q"{Кузнецк}", q"{Кулу}", q"{Кулунда}", q"{Кунгур}"
		, q"{Курган}", q"{Курганинск}", q"{Курильск}", q"{Курск}"
		, q"{Куртамыш}", q"{Курумкан}", q"{Курчатов}", q"{Кущевская}"
		, q"{Кызыл}", q"{Кырен}", q"{Кыштым}", q"{Кяхта}", q"{Лабинск}"
		, q"{Лабытнанги}", q"{Лагань}", q"{Лазаревское}", q"{Лесной (Сверд.)}"
		, q"{Липецк}", q"{Листвянка (Иркут.)}", q"{Лодейное Поле}"
		, q"{Лотошино}", q"{Луга}", q"{Луховицы}", q"{Лысьва}", q"{Льгов}"
		, q"{Любань}", q"{Люберцы}", q"{Лянтор}", q"{Магадан}", q"{Магас}"
		, q"{Магнитогорск}", q"{Майкоп}", q"{Макаров}", q"{Макушино}"
		, q"{Малая Вишера}", q"{Малгобек}", q"{Малоярославец}"
		, q"{Махачкала}", q"{Медногорск}", q"{Междуреченский}"
		, q"{Мезень}", q"{Мелеуз}", q"{Меренга}", q"{Миасс}", q"{Миллерово}"
		, q"{Минеральные Воды}", q"{Минусинск}", q"{Мирный}"
		, q"{Мичуринск}", q"{Можайск}", q"{Можга}", q"{Моздок}", q"{Мокшан}"
		, q"{Мончегорск}", q"{Морозовск}", q"{Моршанск}", q"{Москва}"
		, q"{Москва, МГУ}", q"{Мостовской}", q"{Муравленко}", q"{Мураши}"
		, q"{Мурманск}", q"{Муром}", q"{Мценск}", q"{Мыс Шмидта}"
		, q"{Мытищи}", q"{Набережные Челны}", q"{Надым}", q"{Назрань}"
		, q"{Нальчик}", q"{Наро-Фоминск}", q"{Нарткала}", q"{Нарым}"
		, q"{Нарьян-Мар}", q"{Находка}", q"{Невельск}", q"{Невинномысск}"
		, q"{Невьянск}", q"{Неплюевка}", q"{Нерчинск}", q"{Нефедова}"
		, q"{Нефтегорск (Самар.)}", q"{Нефтекамск}", q"{Нефтеюганск}"
		, q"{Нижневартовск}", q"{Нижнекамск}", q"{Нижнеудинск}"
		, q"{Нижний Новгород}", q"{Нижний Тагил}", q"{Новая Игирма}"
		, q"{Новгород Великий}", q"{Новокузнецк}", q"{Новомичуринск}"
		, q"{Новомосковск}", q"{Новороссийка}", q"{Новороссийск}"
		, q"{Новосибирск}", q"{Новочеркасск}", q"{Новый Оскол}"
		, q"{Новый Уренгой}", q"{Ногинск (Моск.)}", q"{Ноглики}"
		, q"{Норильск}", q"{Ноябрьск}", q"{Нурлат}", q"{Нягань}", q"{Нязепетровск}"
		, q"{Обнинск}", q"{Обоянь}", q"{Объячево}", q"{Одинцово}"
		, q"{Озеры}", q"{Оймякон}", q"{Октябрьский (Башк.)}", q"{Октябрьское (Хант.)}"
		, q"{Октябрьское (Челяб.)}", q"{Оленегорск (Якут.)}"
		, q"{Оленек}", q"{Омск}", q"{Онега}", q"{Орел}", q"{Оренбург}"
		, q"{Орехово-Зуево}", q"{Орск}", q"{Оса}", q"{Осташков}", q"{Оха}"
		, q"{Охотск}", q"{Павловская}", q"{Павловский Посад}"
		, q"{Палана}", q"{Партизанск}", q"{Певек}", q"{Пенза}", q"{Переславль-Залесский}"
		, q"{Пермь}", q"{Петрозаводск}", q"{Петропавловск-Камчатский}"
		, q"{Петухово}", q"{Петушки}", q"{Печенга}", q"{Печора}", q"{Пинега}"
		, q"{Плес}", q"{Плесецк}", q"{Подольск}", q"{Поронайск}", q"{Поярково}"
		, q"{Приморско-Ахтарск}", q"{Приозерск}", q"{Прохладный}"
		, q"{Псебай}", q"{Псков}", q"{Пушкин}", q"{Пушкино (Моск.)}"
		, q"{Пушкинские Горы}", q"{Пышма}", q"{Пятигорск}", q"{Радужный}"
		, q"{Раменское}", q"{Ребриха}", q"{Ревда (Сверд.)}", q"{Ржев}"
		, q"{Рославль}", q"{Россошь}", q"{Ростов}", q"{Ростов-на-Дону}"
		, q"{Рубцовск}", q"{Руза}", q"{Рыбинск}", q"{Рыльск}", q"{Ряжск}"
		, q"{Рязань}", q"{Салават}", q"{Салехард}", q"{Сальск}", q"{Самара}"
		, q"{Санкт-Петербург}", q"{Саранск}", q"{Сарапул}", q"{Саратов}"
		, q"{Саров (Морд.)}", q"{Сасово}", q"{Саянск}", q"{Светлогорск (Калин.)}"
		, q"{Северо-Курильск}", q"{Северобайкальск}", q"{Северодвинск}"
		, q"{Североморск}", q"{Североуральск}", q"{Сеймчан}"
		, q"{Семлячики}", q"{Серафимович}", q"{Сергиев Посад}"
		, q"{Серебряные Пруды}", q"{Середниково}", q"{Серов}"
		, q"{Серпухов}", q"{Сибай}", q"{Сковородино}", q"{Славгород}"
		, q"{Славянск-на-Кубани}", q"{Сладково}", q"{Слюдянка}"
		, q"{Смирных}", q"{Смоленск}", q"{Снежинск}", q"{Снежногорск (Мурм.)}"
		, q"{Соболево}", q"{Советский}", q"{Соликамск}", q"{Солнечногорск}"
		, q"{Соловки}", q"{Соль-Илецк}", q"{Сорочинск}", q"{Сортавала}"
		, q"{Сосновый Бор}", q"{Сосногорск}", q"{Сосьва (Хант.)}"
		, q"{Сочи}", q"{Ставрополь}", q"{Старая Русса}", q"{Старый Оскол}"
		, q"{Стерлитамак}", q"{Стрежевой}", q"{Ступино}", q"{Суздаль}"
		, q"{Сузун}", q"{Сунтар}", q"{Сургут (Хант.)}", q"{Сусуман}"
		, q"{Сухиничи}", q"{Сызрань}", q"{Сыктывкар}", q"{Тавда}"
		, q"{Таганрог}", q"{Тайшет}", q"{Талдом}", q"{Тамбей}", q"{Тамбов}"
		, q"{Тарко-Сале}", q"{Таштагол}", q"{Тверь}", q"{Теберда}"
		, q"{Темрюк}", q"{Териберка}", q"{Терней}", q"{Терскол}", q"{Тикси}"
		, q"{Тимашевск}", q"{Тихвин}", q"{Тихорецк}", q"{Тобольск}"
		, q"{Токма}", q"{Токсово}", q"{Тольятти}", q"{Томари}", q"{Томпа}"
		, q"{Томск}", q"{Торжок}", q"{Тосно}", q"{Тотьма}", q"{Троицк (Челяб.)}"
		, q"{Троицк (Моск.)}", q"{Троицко-Печорск}", q"{Туапсе}"
		, q"{Тула}", q"{Тулпан}", q"{Тулун}", q"{Тура}", q"{Туруханск}"
		, q"{Тутаев}", q"{Тутончаны}", q"{Тымовское}", q"{Тында}"
		, q"{Тырныауз}", q"{Тюмень}", q"{Уварово}", q"{Углегорск}"
		, q"{Углич}", q"{Улан-Удэ}", q"{Ульяновск}", q"{Урай}", q"{Уренгой}"
		, q"{Урус-Мартан}", q"{Урюпинск}", q"{Усинск}", q"{Усмань}"
		, q"{Усолье Сибирское}", q"{Уссурийск}", q"{Усть-Баргузин}"
		, q"{Усть-Джегута}", q"{Усть-Илимск}", q"{Усть-Ишим}"
		, q"{Усть-Калманка}", q"{Усть-Камчатск}", q"{Усть-Катав}"
		, q"{Усть-Кулом}", q"{Усть-Кут}", q"{Усть-Ордынский}"
		, q"{Устюжна}", q"{Уфа}", q"{Ухта}", q"{Учалы}", q"{Уэлен}", q"{Фатеж}"
		, q"{Хабаровск}", q"{Ханты-Мансийск}", q"{Хасавюрт}"
		, q"{Хасан}", q"{Хатанга}", q"{Химки}", q"{Холмогоры}", q"{Холмск}"
		, q"{Хоста}", q"{Хужир}", q"{Цимлянск}", q"{Чайковский}", q"{Чебаркуль}"
		, q"{Чебоксары}", q"{Чегем}", q"{Челюскин}", q"{Челябинск}"
		, q"{Черемхово}", q"{Череповец}", q"{Черкесск}", q"{Чермоз}"
		, q"{Черняховск}", q"{Черский}", q"{Черусти}", q"{Чехов}"
		, q"{Чикола}", q"{Чита}", q"{Чокурдах}", q"{Чулым}", q"{Чусовой}"
		, q"{Шадринск}", q"{Шали}", q"{Шамары}", q"{Шарья}", q"{Шатки}"
		, q"{Шатой}", q"{Шатура}", q"{Шаховская}", q"{Шахты}", q"{Шелагонцы}"
		, q"{Шелехов}", q"{Шенкурск}", q"{Шерегеш}", q"{Шереметьево}"
		, q"{Шилка}", q"{Шумиха}", q"{Шуя}", q"{Щелково}", q"{Щельяюр}"
		, q"{Элиста}", q"{Эльбрус}", q"{Эльтон}", q"{Энгельс}", q"{Югорск}"
		, q"{Южно-Курильск}", q"{Южно-Сахалинск}", q"{Южноуральск}"
		, q"{Юровск}", q"{Юрьев-Польский}", q"{Юрьевец (Иван.)}"
		, q"{Юрюзань}", q"{Якутск}", q"{Якша}", q"{Ялуторовск}", q"{Ямбург}"
		, q"{Яр-Сале}", q"{Ярославль}", q"{Ясный (Оренб.)}", q"{Яхрома}"
		, q"{Яшалта}", q"{Яшкуль}" ];

		return choice(strs, this.rnd);
	}

	override string locationCityPattern() {
		switch(uniform(0, 1, this.rnd)) {
			case 0: return locationCityName();
			default: return "";
		}
	}

	override string locationCountry() {
		const string[] strs =
		[ q"{Австралия}", q"{Австрия}", q"{Азербайджан}", q"{Албания}"
		, q"{Алжир}", q"{Американское Самоа (не признана)}"
		, q"{Ангилья}", q"{Ангола}", q"{Андорра}", q"{Антарктика (не признана)}"
		, q"{Антигуа и Барбуда}", q"{Антильские Острова (не признана)}"
		, q"{Аомынь (не признана)}", q"{Аргентина}", q"{Армения}"
		, q"{Афганистан}", q"{Багамские Острова}", q"{Бангладеш}"
		, q"{Барбадос}", q"{Бахрейн}", q"{Беларусь}", q"{Белиз}", q"{Бельгия}"
		, q"{Бенин}", q"{Болгария}", q"{Боливия}", q"{Босния и Герцеговина}"
		, q"{Ботсвана}", q"{Бразилия}", q"{Бруней}", q"{Буркина-Фасо}"
		, q"{Бурунди}", q"{Бутан}", q"{Вануату}", q"{Ватикан}", q"{Великобритания}"
		, q"{Венгрия}", q"{Венесуэла}", q"{Восточный Тимор}"
		, q"{Вьетнам}", q"{Габон}", q"{Гаити}", q"{Гайана}", q"{Гамбия}"
		, q"{Гана}", q"{Гваделупа (не признана)}", q"{Гватемала}"
		, q"{Гвиана (не признана)}", q"{Гвинея}", q"{Гвинея-Бисау}"
		, q"{Германия}", q"{Гондурас}", q"{Гренада}", q"{Греция}"
		, q"{Грузия}", q"{Дания}", q"{Джибути}", q"{Доминика}", q"{Доминиканская Республика}"
		, q"{Египет}", q"{Замбия}", q"{Зимбабве}", q"{Израиль}", q"{Индия}"
		, q"{Индонезия}", q"{Иордания}", q"{Ирак}", q"{Иран}", q"{Ирландия}"
		, q"{Исландия}", q"{Испания}", q"{Италия}", q"{Йемен}", q"{Кабо-Верде}"
		, q"{Казахстан}", q"{Камбоджа}", q"{Камерун}", q"{Канада}"
		, q"{Катар}", q"{Кения}", q"{Кипр}", q"{Кирибати}", q"{Китай}"
		, q"{Колумбия}", q"{Коморские Острова}", q"{Конго}", q"{Демократическая Республика}"
		, q"{Корея (Северная)}", q"{Корея (Южная)}", q"{Косово}"
		, q"{Коста-Рика}", q"{Кот-д'Ивуар}", q"{Куба}", q"{Кувейт}"
		, q"{Кука острова}", q"{Кыргызстан}", q"{Лаос}", q"{Латвия}"
		, q"{Лесото}", q"{Либерия}", q"{Ливан}", q"{Ливия}", q"{Литва}"
		, q"{Лихтенштейн}", q"{Люксембург}", q"{Маврикий}", q"{Мавритания}"
		, q"{Мадагаскар}", q"{Македония}", q"{Малави}", q"{Малайзия}"
		, q"{Мали}", q"{Мальдивы}", q"{Мальта}", q"{Маршалловы Острова}"
		, q"{Мексика}", q"{Микронезия}", q"{Мозамбик}", q"{Молдова}"
		, q"{Монако}", q"{Монголия}", q"{Марокко}", q"{Мьянма}", q"{Намибия}"
		, q"{Науру}", q"{Непал}", q"{Нигер}", q"{Нигерия}", q"{Нидерланды}"
		, q"{Никарагуа}", q"{Новая Зеландия}", q"{Норвегия}"
		, q"{Объединенные Арабские Эмираты}", q"{Оман}", q"{Пакистан}"
		, q"{Палау}", q"{Панама}", q"{Папуа — Новая Гвинея}", q"{Парагвай}"
		, q"{Перу}", q"{Польша}", q"{Португалия}", q"{Республика Конго}"
		, q"{Россия}", q"{Руанда}", q"{Румыния}", q"{Сальвадор}", q"{Самоа}"
		, q"{Сан-Марино}", q"{Сан-Томе и Принсипи}", q"{Саудовская Аравия}"
		, q"{Свазиленд}", q"{Сейшельские острова}", q"{Сенегал}"
		, q"{Сент-Винсент и Гренадины}", q"{Сент-Киттс и Невис}"
		, q"{Сент-Люсия}", q"{Сербия}", q"{Сингапур}", q"{Сирия}"
		, q"{Словакия}", q"{Словения}", q"{Соединенные Штаты Америки}"
		, q"{Соломоновы Острова}", q"{Сомали}", q"{Судан}", q"{Суринам}"
		, q"{Сьерра-Леоне}", q"{Таджикистан}", q"{Таиланд}", q"{Тайвань (не признана)}"
		, q"{Тамил-Илам (не признана)}", q"{Танзания}", q"{Тёркс и Кайкос (не признана)}"
		, q"{Того}", q"{Токелау (не признана)}", q"{Тонга}", q"{Тринидад и Тобаго}"
		, q"{Тувалу}", q"{Тунис}", q"{Турецкая Республика Северного Кипра (не признана)}"
		, q"{Туркменистан}", q"{Турция}", q"{Уганда}", q"{Узбекистан}"
		, q"{Украина}", q"{Уругвай}", q"{Фарерские Острова (не признана)}"
		, q"{Фиджи}", q"{Филиппины}", q"{Финляндия}", q"{Франция}"
		, q"{Французская Полинезия (не признана)}", q"{Хорватия}"
		, q"{Центральноафриканская Республика}", q"{Чад}"
		, q"{Черногория}", q"{Чехия}", q"{Чили}", q"{Швейцария}", q"{Швеция}"
		, q"{Шри-Ланка}", q"{Эквадор}", q"{Экваториальная Гвинея}"
		, q"{Эритрея}", q"{Эстония}", q"{Эфиопия}", q"{Южно-Африканская Республика}"
		, q"{Ямайка}", q"{Япония}" ];

		return choice(strs, this.rnd);
	}

	override string locationDefaultCountry() {
		const string[] strs =
		[ q"{Россия}" ];

		return choice(strs, this.rnd);
	}

	override string locationPostcode() {
		const string[] strs =
		[ q"{######}" ];

		return numberBuild(choice(strs, this.rnd));
	}

	override string locationSecondaryAddress() {
		const string[] strs =
		[ q"{кв. ###}" ];

		return numberBuild(choice(strs, this.rnd));
	}

	override string locationState() {
		const string[] strs =
		[ q"{Алтайский край}", q"{Амурская область}", q"{Архангельская область}"
		, q"{Астраханская область}", q"{Белгородская область}"
		, q"{Брянская область}", q"{Владимирская область}"
		, q"{Волгоградская область}", q"{Воронежская область}"
		, q"{г. Москва}", q"{г. Санкт - Петербург}", q"{г. Севастополь}"
		, q"{Еврейская автономная область}", q"{Забайкальский край}"
		, q"{Ивановская область}", q"{Иркутская область}"
		, q"{Кабардино - Балкарская Республика}", q"{Калининградская область}"
		, q"{Калужская область}", q"{Камчатский край}", q"{Карачаево - Черкесская Республика}"
		, q"{Кемеровская область - Кузбасс}", q"{Кировская область}"
		, q"{Костромская область}", q"{Краснодарский край}"
		, q"{Красноярский край}", q"{Курганская область}"
		, q"{Курская область}", q"{Ленинградская область}"
		, q"{Липецкая область}", q"{Магаданская область}"
		, q"{Московская область}", q"{Мурманская область}"
		, q"{Ненецкий автономный округ}", q"{Нижегородская область}"
		, q"{Новгородская область}", q"{Новосибирская область}"
		, q"{Омская область}", q"{Оренбургская область}"
		, q"{Орловская область}", q"{Пензенская область}"
		, q"{Пермский край}", q"{Приморский край}", q"{Псковская область}"
		, q"{Республика Адыгея (Адыгея)}", q"{Республика Алтай}"
		, q"{Республика Башкортостан}", q"{Республика Бурятия}"
		, q"{Республика Дагестан}", q"{Республика Ингушетия}"
		, q"{Республика Калмыкия}", q"{Республика Карелия}"
		, q"{Республика Коми}", q"{Республика Крым}", q"{Республика Марий Эл}"
		, q"{Республика Мордовия}", q"{Республика Саха (Якутия)}"
		, q"{Республика Северная Осетия - Алания}", q"{Республика Татарстан}"
		, q"{Республика Тыва}", q"{Республика Хакасия}", q"{Ростовская область}"
		, q"{Рязанская область}", q"{Самарская область}"
		, q"{Саратовская область}", q"{Сахалинская область}"
		, q"{Свердловская область}", q"{Смоленская область}"
		, q"{Ставропольский край}", q"{Тамбовская область}"
		, q"{Тверская область}", q"{Томская область}", q"{Тульская область}"
		, q"{Тюменская область}", q"{Удмуртская Республика}"
		, q"{Ульяновская область}", q"{Хабаровский край}"
		, q"{Ханты-Мансийский автономный округ - Югра}", q"{Челябинская область}"
		, q"{Чеченская Республика}", q"{Чувашская Республика}"
		, q"{Чукотский автономный округ}", q"{Ямало-ненецкий автономный округ}"
		, q"{Ярославская область}" ];

		return choice(strs, this.rnd);
	}

	override string locationStreetAddress() {
		const LocationStreetAddressEnum[] enums = [ LocationStreetAddressEnum.normal, LocationStreetAddressEnum.full ];
		return locationStreetAddress(choice(enums, this.rnd));
	}

	override string locationStreetAddress(LocationStreetAddressEnum which) {
		switch(which) {
			case LocationStreetAddressEnum.normal: return locationStreet() ~ ", " ~ locationBuildingNumber();
			case LocationStreetAddressEnum.full: return locationStreet() ~ ", " ~ locationBuildingNumber() ~ " " ~ locationSecondaryAddress();
			default: return "";
		}
	}

	override string locationStreetName() {
		const string[] strs =
		[ q"{Советская}", q"{Молодежная}", q"{Центральная}", q"{Школьная}"
		, q"{Новая}", q"{Садовая}", q"{Лесная}", q"{Набережная}", q"{Октябрьская}"
		, q"{Зеленая}", q"{Комсомольская}", q"{Заречная}", q"{Первомайская}"
		, q"{Полевая}", q"{Луговая}", q"{Пионерская}", q"{Юбилейная}"
		, q"{Северная}", q"{Пролетарская}", q"{Степная}", q"{Южная}"
		, q"{Колхозная}", q"{Рабочая}", q"{Солнечная}", q"{Железнодорожная}"
		, q"{Восточная}", q"{Заводская}", q"{Нагорная}", q"{Береговая}"
		, q"{Кооперативная}", q"{Красноармейская}", q"{Совхозная}"
		, q"{Речная}", q"{Спортивная}", q"{Озерная}", q"{Строительная}"
		, q"{Парковая}", q"{Подгорная}", q"{Почтовая}", q"{Партизанская}"
		, q"{Вокзальная}", q"{Дорожная}", q"{Дачная}", q"{Западная}"
		, q"{Московская}", q"{Красная}", q"{Трудовая}", q"{Шоссейная}"
		, q"{Коммунистическая}", q"{Сосновая}", q"{Клубная}"
		, q"{Березовая}", q"{Больничная}", q"{Интернациональная}"
		, q"{Цветочная}", q"{Трактовая}", q"{Горная}", q"{Весенняя}"
		, q"{Коммунальная}", q"{Майская}", q"{Привокзальная}"
		, q"{Таежная}", q"{Транспортная}", q"{Овражная}", q"{Светлая}"
		, q"{Вишневая}", q"{Ключевая}", q"{Песчаная}", q"{Ленинградская}"
		, q"{Профсоюзная}", q"{Верхняя}", q"{Ленинская}", q"{Кирпичная}"
		, q"{Мостовая}", q"{Станционная}", q"{Уральская}", q"{Линейная}"
		, q"{Фабричная}", q"{Магистральная}", q"{Сибирская}"
		, q"{Крестьянская}", q"{Российская}", q"{Тихая}", q"{Широкая}"
		, q"{Нижняя}", q"{Народная}", q"{Промышленная}", q"{Кольцевая}"
		, q"{Дальняя}", q"{Базарная}", q"{Целинная}", q"{Родниковая}"
		, q"{Революционная}", q"{Социалистическая}", q"{Звездная}"
		, q"{Студенческая}", q"{Мирная}", q"{Кубанская}", q"{Гаражная}"
		, q"{Фестивальная}", q"{Гражданская}", q"{Песочная}"
		, q"{Сиреневая}", q"{Сельская}", q"{Кузнечная}", q"{Пушкинская}"
		, q"{Крайняя}", q"{Гвардейская}", q"{Веселая}", q"{Загородная}"
		, q"{Олимпийская}", q"{Приозерная}", q"{Рябиновая}", q"{Заозерная}"
		, q"{Боровая}", q"{Урожайная}", q"{Торговая}", q"{Донская}"
		, q"{Пограничная}", q"{Огородная}", q"{Пригородная}"
		, q"{Стадионная}", q"{Виноградная}", q"{Киевская}", q"{Индустриальная}"
		, q"{Красногвардейская}", q"{Волжская}", q"{Свободная}"
		, q"{Кедровая}", q"{Подлесная}", q"{Полярная}", q"{Раздольная}"
		, q"{Карьерная}", q"{Мельничная}", q"{Украинская}", q"{Шахтерская}"
		, q"{Запрудная}", q"{Элеваторная}", q"{Театральная}"
		, q"{Геологическая}", q"{Болотная}", q"{Придорожная}"
		, q"{Кленовая}", q"{Казачья}", q"{Малая}", q"{Морская}", q"{Волгоградская}"
		, q"{Средняя}", q"{Безымянная}", q"{Краснофлотская}"
		, q"{Братская}", q"{Тенистая}", q"{Учительская}", q"{Кавказская}"
		, q"{Короткая}", q"{Деповская}", q"{Амурская}", q"{Сенная}"
		, q"{Поселковая}", q"{Прудовая}", q"{Депутатская}", q"{Авиационная}"
		, q"{Аэродромная}", q"{Большая}", q"{Приморская}", q"{Алтайская}"
		, q"{Тополиная}", q"{Ростовская}", q"{Тракторная}", q"{Мелиоративная}"
		, q"{Ольховая}", q"{Славянская}", q"{Радужная}", q"{Краснодарская}"
		, q"{Стахановская}", q"{Ярославская}", q"{Коллективная}"
		, q"{Ангарская}", q"{Локомотивная}", q"{Ягодная}", q"{Смоленская}"
		, q"{Тепличная}", q"{Водопроводная}", q"{Республиканская}"
		, q"{Осенняя}", q"{Байкальская}", q"{Саратовская}", q"{Казанская}"
		, q"{Воронежская}", q"{Брянская}", q"{Производственная}"
		, q"{Техническая}", q"{Енисейская}", q"{Севастопольская}"
		, q"{Окружная}", q"{Орловская}", q"{Хуторская}", q"{Тупиковая}"
		, q"{Каштановая}", q"{Омская}", q"{Привольная}", q"{Курортная}"
		, q"{Ивановская}", q"{Выгонная}", q"{Крымская}", q"{Путейская}"
		, q"{Проезжая}", q"{Краснознаменная}", q"{Одесская}"
		, q"{Логовая}", q"{Высокая}", q"{Ясная}", q"{Портовая}", q"{Снежная}"
		, q"{Санаторная}", q"{Союзная}", q"{Ульяновская}", q"{Сахалинская}"
		, q"{Горняцкая}", q"{Прибрежная}", q"{Рыбацкая}", q"{Полтавская}"
		, q"{Тамбовская}", q"{Красноярская}", q"{Новосельская}"
		, q"{Проточная}", q"{Черноморская}", q"{Минская}", q"{Главная}"
		, q"{Вольная}", q"{Хвойная}", q"{Космическая}", q"{Моховая}"
		, q"{Курская}", q"{Курганная}", q"{Угловая}", q"{Камская}"
		, q"{Инженерная}", q"{Лесозаводская}", q"{Астраханская}"
		, q"{Белорусская}", q"{Заовражная}", q"{Азовская}", q"{Ручейная}"
		, q"{Волочаевская}", q"{Ставропольская}", q"{Слободская}"
		, q"{Тульская}", q"{Харьковская}", q"{Петровская}", q"{Владимирская}"
		, q"{Высоковольтная}", q"{Лазурная}", q"{Покровская}"
		, q"{Новгородская}", q"{Ленская}", q"{Сплавная}", q"{Ударная}"
		, q"{Калужская}", q"{Прудная}", q"{Краснопартизанская}"
		, q"{Ореховая}", q"{Таманская}", q"{Иркутская}", q"{Отрадная}"
		, q"{Большевистская}", q"{Троицкая}", q"{Лесхозная}"
		, q"{Васильковая}", q"{Механическая}", q"{Путевая}", q"{Кузнецкая}"
		, q"{Физкультурная}", q"{Черемуховая}", q"{Флотская}"
		, q"{Угольная}", q"{Просторная}", q"{Поперечная}", q"{Городская}"
		, q"{Абрикосовая}", q"{Бульварная}", q"{Прохладная}"
		, q"{Томская}", q"{Энергетическая}", q"{Литейная}", q"{Медицинская}"
		, q"{Заливная}", q"{Бригадная}", q"{Детская}", q"{Запорожская}"
		, q"{Дальневосточная}", q"{Балтийская}", q"{Февральская}"
		, q"{Лунная}", q"{Высотная}", q"{Рязанская}", q"{Малиновая}" ];

		return choice(strs, this.rnd);
	}

	override string locationStreetPattern() {
		switch(uniform(0, 2, this.rnd)) {
			case 0: return locationStreetSuffix() ~ " " ~ locationStreetName();
			case 1: return locationStreetName() ~ " " ~ locationStreetSuffix();
			default: return "";
		}
	}

	override string locationStreetSuffix() {
		const string[] strs =
		[ q"{аллея}", q"{ал.}", q"{набережная}", q"{наб.}", q"{площадь}"
		, q"{пл.}", q"{улица}", q"{ул.}" ];

		return choice(strs, this.rnd);
	}

	override string loremWords() {
		const string[] strs =
		[ q"{а}", q"{административных}", q"{активизации}", q"{активности}"
		, q"{активом}", q"{актуальность}", q"{анализа}", q"{базы}"
		, q"{богатый}", q"{в}", q"{важную}", q"{важные}", q"{влечёт}", q"{внедрения}"
		, q"{воздействия}", q"{всего}", q"{выбранный}", q"{вызывает}"
		, q"{выполнять}", q"{высокотехнологичная}", q"{высшего}"
		, q"{гражданского}", q"{дальнейшее}", q"{дальнейших}"
		, q"{демократической}", q"{деятельности}", q"{для}", q"{другой}"
		, q"{же}", q"{за}", q"{забывать}", q"{зависит}", q"{задания}", q"{задач}"
		, q"{задача}", q"{занимаемых}", q"{значение}", q"{значимость}"
		, q"{значительной}", q"{и}", q"{играет}", q"{идейные}", q"{изменений}"
		, q"{инновационный}", q"{интересный}", q"{информационно-пропогандистское}"
		, q"{кадров}", q"{кадровой}", q"{качества}", q"{качественно}"
		, q"{количественный}", q"{консультация}", q"{концепция}"
		, q"{кругу}", q"{курс}", q"{массового}", q"{материально-технической}"
		, q"{место}", q"{мира}", q"{модели}", q"{модель}", q"{модернизации}"
		, q"{на}", q"{намеченных}", q"{нами}", q"{направлений}", q"{напрямую}"
		, q"{нас}", q"{настолько}", q"{насущным}", q"{национальный}"
		, q"{начало}", q"{нашей}", q"{не}", q"{новая}", q"{новых}", q"{обеспечение}"
		, q"{обеспечивает}", q"{образом}", q"{обуславливает}"
		, q"{обучения}", q"{общества}", q"{общественной}", q"{обществом}"
		, q"{однако}", q"{определения}", q"{опыт}", q"{организации}"
		, q"{организационной}", q"{особенности}", q"{от}", q"{отметить}"
		, q"{отношении}", q"{оценить}", q"{очевидна}", q"{плановых}"
		, q"{по}", q"{повседневная}", q"{повседневной}", q"{повышение}"
		, q"{повышению}", q"{подготовке}", q"{позволяет}", q"{позиции}"
		, q"{показывает}", q"{понимание}", q"{порядка}", q"{последовательного}"
		, q"{поставленных}", q"{постоянное}", q"{постоянный}"
		, q"{потребностям}", q"{поэтапного}", q"{правительством}"
		, q"{практика}", q"{предложений}", q"{предпосылки}", q"{представляет}"
		, q"{прежде}", q"{принимаемых}", q"{принципов}", q"{проблем}"
		, q"{проверки}", q"{прогресса}", q"{прогрессивного}"
		, q"{проект}", q"{профессионального}", q"{процесс}", q"{путь}"
		, q"{работы}", q"{равным}", q"{развития}", q"{различных}"
		, q"{разнообразный}", q"{разработке}", q"{рамки}", q"{реализация}"
		, q"{ресурсосберегающих}", q"{роль}", q"{рост}", q"{с}", q"{систему}"
		, q"{системы}", q"{следует}", q"{сложившаяся}", q"{собой}"
		, q"{современного}", q"{создаёт}", q"{создание}", q"{сознания}"
		, q"{сомнений}", q"{соображения}", q"{соответствующей}"
		, q"{соответствующих}", q"{социально-ориентированный}"
		, q"{социально-экономическое}", q"{специалистов}"
		, q"{способствует}", q"{степени}", q"{стороны}", q"{структура}"
		, q"{структуры}", q"{существующий}", q"{сущности}", q"{сфера}"
		, q"{также}", q"{таким}", q"{технологий}", q"{требует}", q"{укрепления}"
		, q"{управление}", q"{уровня}", q"{условий}", q"{уточнения}"
		, q"{участия}", q"{участниками}", q"{финансовых}", q"{форм}"
		, q"{формировании}", q"{формированию}", q"{формирования}"
		, q"{целесообразности}", q"{что}", q"{шагов}", q"{широким}"
		, q"{широкому}", q"{экономической}", q"{эксперимент}"
		, q"{этих}" ];

		return choice(strs, this.rnd);
	}

	override string personFemaleFirstName() {
		const string[] strs =
		[ q"{Агата}", q"{Агафья}", q"{Акулина}", q"{Алевтина}", q"{Александра}"
		, q"{Алина}", q"{Алла}", q"{Анастасия}", q"{Ангелина}", q"{Анжела}"
		, q"{Анжелика}", q"{Анна}", q"{Антонина}", q"{Валентина}"
		, q"{Валерия}", q"{Варвара}", q"{Василиса}", q"{Вера}", q"{Вероника}"
		, q"{Виктория}", q"{Галина}", q"{Глафира}", q"{Дарья}", q"{Евгения}"
		, q"{Евдокия}", q"{Евпраксия}", q"{Евфросиния}", q"{Екатерина}"
		, q"{Елена}", q"{Елизавета}", q"{Жанна}", q"{Зинаида}", q"{Зоя}"
		, q"{Иванна}", q"{Ираида}", q"{Ирина}", q"{Ия}", q"{Кира}", q"{Клавдия}"
		, q"{Ксения}", q"{Лариса}", q"{Лидия}", q"{Лора}", q"{Лукия}", q"{Любовь}"
		, q"{Людмила}", q"{Майя}", q"{Маргарита}", q"{Марина}", q"{Мария}"
		, q"{Марфа}", q"{Милица}", q"{Надежда}", q"{Наина}", q"{Наталья}"
		, q"{Нина}", q"{Нинель}", q"{Нонна}", q"{Оксана}", q"{Октябрина}"
		, q"{Олимпиада}", q"{Ольга}", q"{Пелагея}", q"{Полина}", q"{Прасковья}"
		, q"{Раиса}", q"{Регина}", q"{Светлана}", q"{Синклитикия}"
		, q"{София}", q"{Таисия}", q"{Тамара}", q"{Татьяна}", q"{Ульяна}"
		, q"{Фаина}", q"{Феврония}", q"{Фёкла}", q"{Элеонора}", q"{Эмилия}"
		, q"{Юлия}" ];

		return choice(strs, this.rnd);
	}

	override string personFemaleMiddleName() {
		const string[] strs =
		[ q"{Александровна}", q"{Андреевна}", q"{Архиповна}", q"{Алексеевна}"
		, q"{Антоновна}", q"{Аскольдовна}", q"{Альбертовна}"
		, q"{Аркадьевна}", q"{Афанасьевна}", q"{Анатольевна}"
		, q"{Артемовна}", q"{Богдановна}", q"{Болеславовна}"
		, q"{Борисовна}", q"{Вадимовна}", q"{Васильевна}", q"{Владимировна}"
		, q"{Валентиновна}", q"{Вениаминовна}", q"{Владиславовна}"
		, q"{Валериевна}", q"{Викторовна}", q"{Вячеславовна}"
		, q"{Геннадиевна}", q"{Георгиевна}", q"{Геннадьевна}"
		, q"{Григорьевна}", q"{Даниловна}", q"{Дмитриевна}", q"{Евгеньевна}"
		, q"{Егоровна}", q"{Ефимовна}", q"{Ждановна}", q"{Захаровна}"
		, q"{Ивановна}", q"{Игоревна}", q"{Ильинична}", q"{Кирилловна}"
		, q"{Кузьминична}", q"{Константиновна}", q"{Леонидовна}"
		, q"{Леоновна}", q"{Львовна}", q"{Макаровна}", q"{Матвеевна}"
		, q"{Михайловна}", q"{Максимовна}", q"{Мироновна}", q"{Натановна}"
		, q"{Никифоровна}", q"{Ниловна}", q"{Наумовна}", q"{Николаевна}"
		, q"{Олеговна}", q"{Оскаровна}", q"{Павловна}", q"{Петровна}"
		, q"{Робертовна}", q"{Рубеновна}", q"{Руслановна}", q"{Романовна}"
		, q"{Рудольфовна}", q"{Святославовна}", q"{Сергеевна}"
		, q"{Степановна}", q"{Семеновна}", q"{Станиславовна}"
		, q"{Тарасовна}", q"{Тимофеевна}", q"{Тимуровна}", q"{Федоровна}"
		, q"{Феликсовна}", q"{Филипповна}", q"{Харитоновна}"
		, q"{Эдуардовна}", q"{Эльдаровна}", q"{Юльевна}", q"{Юрьевна}"
		, q"{Яковлевна}" ];

		return choice(strs, this.rnd);
	}

	string personFemaleLastName() {
		const string[] strs =
		[ q"{Смирнова}", q"{Иванова}", q"{Кузнецова}", q"{Попова}"
		, q"{Соколова}", q"{Лебедева}", q"{Козлова}", q"{Новикова}"
		, q"{Морозова}", q"{Петрова}", q"{Волкова}", q"{Соловьева}"
		, q"{Васильева}", q"{Зайцева}", q"{Павлова}", q"{Семенова}"
		, q"{Голубева}", q"{Виноградова}", q"{Богданова}", q"{Воробьева}"
		, q"{Федорова}", q"{Михайлова}", q"{Беляева}", q"{Тарасова}"
		, q"{Белова}", q"{Комарова}", q"{Орлова}", q"{Киселева}", q"{Макарова}"
		, q"{Андреева}", q"{Ковалева}", q"{Ильина}", q"{Гусева}", q"{Титова}"
		, q"{Кузьмина}", q"{Кудрявцева}", q"{Баранова}", q"{Куликова}"
		, q"{Алексеева}", q"{Степанова}", q"{Яковлева}", q"{Сорокина}"
		, q"{Сергеева}", q"{Романова}", q"{Захарова}", q"{Борисова}"
		, q"{Королева}", q"{Герасимова}", q"{Пономарева}", q"{Григорьева}"
		, q"{Лазарева}", q"{Медведева}", q"{Ершова}", q"{Никитина}"
		, q"{Соболева}", q"{Рябова}", q"{Полякова}", q"{Цветкова}"
		, q"{Данилова}", q"{Жукова}", q"{Фролова}", q"{Журавлева}"
		, q"{Николаева}", q"{Крылова}", q"{Максимова}", q"{Сидорова}"
		, q"{Осипова}", q"{Белоусова}", q"{Федотова}", q"{Дорофеева}"
		, q"{Егорова}", q"{Матвеева}", q"{Боброва}", q"{Дмитриева}"
		, q"{Калинина}", q"{Анисимова}", q"{Петухова}", q"{Антонова}"
		, q"{Тимофеева}", q"{Никифорова}", q"{Веселова}", q"{Филиппова}"
		, q"{Маркова}", q"{Большакова}", q"{Суханова}", q"{Миронова}"
		, q"{Ширяева}", q"{Александрова}", q"{Коновалова}", q"{Шестакова}"
		, q"{Казакова}", q"{Ефимова}", q"{Денисова}", q"{Громова}"
		, q"{Фомина}", q"{Давыдова}", q"{Мельникова}", q"{Щербакова}"
		, q"{Блинова}", q"{Колесникова}", q"{Карпова}", q"{Афанасьева}"
		, q"{Власова}", q"{Маслова}", q"{Исакова}", q"{Тихонова}"
		, q"{Аксенова}", q"{Гаврилова}", q"{Родионова}", q"{Котова}"
		, q"{Горбунова}", q"{Кудряшова}", q"{Быкова}", q"{Зуева}"
		, q"{Третьякова}", q"{Савельева}", q"{Панова}", q"{Рыбакова}"
		, q"{Суворова}", q"{Абрамова}", q"{Воронова}", q"{Мухина}"
		, q"{Архипова}", q"{Трофимова}", q"{Мартынова}", q"{Емельянова}"
		, q"{Горшкова}", q"{Чернова}", q"{Овчинникова}", q"{Селезнева}"
		, q"{Панфилова}", q"{Копылова}", q"{Михеева}", q"{Галкина}"
		, q"{Назарова}", q"{Лобанова}", q"{Лукина}", q"{Белякова}"
		, q"{Потапова}", q"{Некрасова}", q"{Хохлова}", q"{Жданова}"
		, q"{Наумова}", q"{Шилова}", q"{Воронцова}", q"{Ермакова}"
		, q"{Дроздова}", q"{Игнатьева}", q"{Савина}", q"{Логинова}"
		, q"{Сафонова}", q"{Капустина}", q"{Кириллова}", q"{Моисеева}"
		, q"{Елисеева}", q"{Кошелева}", q"{Костина}", q"{Горбачева}"
		, q"{Орехова}", q"{Ефремова}", q"{Исаева}", q"{Евдокимова}"
		, q"{Калашникова}", q"{Кабанова}", q"{Носкова}", q"{Юдина}"
		, q"{Кулагина}", q"{Лапина}", q"{Прохорова}", q"{Нестерова}"
		, q"{Харитонова}", q"{Агафонова}", q"{Муравьева}", q"{Ларионова}"
		, q"{Федосеева}", q"{Зимина}", q"{Пахомова}", q"{Шубина}"
		, q"{Игнатова}", q"{Филатова}", q"{Крюкова}", q"{Рогова}"
		, q"{Кулакова}", q"{Терентьева}", q"{Молчанова}", q"{Владимирова}"
		, q"{Артемьева}", q"{Гурьева}", q"{Зиновьева}", q"{Гришина}"
		, q"{Кононова}", q"{Дементьева}", q"{Ситникова}", q"{Симонова}"
		, q"{Мишина}", q"{Фадеева}", q"{Комиссарова}", q"{Мамонтова}"
		, q"{Носова}", q"{Гуляева}", q"{Шарова}", q"{Устинова}", q"{Вишнякова}"
		, q"{Евсеева}", q"{Лаврентьева}", q"{Брагина}", q"{Константинова}"
		, q"{Корнилова}", q"{Авдеева}", q"{Зыкова}", q"{Бирюкова}"
		, q"{Шарапова}", q"{Никонова}", q"{Щукина}", q"{Дьячкова}"
		, q"{Одинцова}", q"{Сазонова}", q"{Якушева}", q"{Красильникова}"
		, q"{Гордеева}", q"{Самойлова}", q"{Князева}", q"{Беспалова}"
		, q"{Уварова}", q"{Шашкова}", q"{Бобылева}", q"{Доронина}"
		, q"{Белозерова}", q"{Рожкова}", q"{Самсонова}", q"{Мясникова}"
		, q"{Лихачева}", q"{Бурова}", q"{Сысоева}", q"{Фомичева}"
		, q"{Русакова}", q"{Стрелкова}", q"{Гущина}", q"{Тетерина}"
		, q"{Колобова}", q"{Субботина}", q"{Фокина}", q"{Блохина}"
		, q"{Селиверстова}", q"{Пестова}", q"{Кондратьева}", q"{Силина}"
		, q"{Меркушева}", q"{Лыткина}", q"{Турова}" ];

		return choice(strs, this.rnd);
	}

	override string personFirstName() {
		const string[] strs =
		[ q"{Август}", q"{Авдей}", q"{Аверкий}", q"{Аверьян}", q"{Авксентий}"
		, q"{Автоном}", q"{Агап}", q"{Агата}", q"{Агафон}", q"{Агафья}"
		, q"{Аггей}", q"{Адам}", q"{Адриан}", q"{Азарий}", q"{Аким}", q"{Акулина}"
		, q"{Алевтина}", q"{Александр}", q"{Александра}", q"{Алексей}"
		, q"{Алина}", q"{Алла}", q"{Амвросий}", q"{Амос}", q"{Ананий}"
		, q"{Анастасия}", q"{Анатолий}", q"{Ангелина}", q"{Андрей}"
		, q"{Андрон}", q"{Андроник}", q"{Анжела}", q"{Анжелика}", q"{Аникей}"
		, q"{Аникита}", q"{Анисим}", q"{Анна}", q"{Антип}", q"{Антонин}"
		, q"{Антонина}", q"{Аполлинарий}", q"{Аполлон}", q"{Арефий}"
		, q"{Аристарх}", q"{Аркадий}", q"{Арсений}", q"{Артем}", q"{Артемий}"
		, q"{Архип}", q"{Аскольд}", q"{Афанасий}", q"{Афиноген}", q"{Бажен}"
		, q"{Богдан}", q"{Болеслав}", q"{Борис}", q"{Борислав}", q"{Боян}"
		, q"{Бронислав}", q"{Будимир}", q"{Вадим}", q"{Валентин}"
		, q"{Валентина}", q"{Валерий}", q"{Валерия}", q"{Валерьян}"
		, q"{Варвара}", q"{Варлаам}", q"{Варфоломей}", q"{Василий}"
		, q"{Василиса}", q"{Вацлав}", q"{Велимир}", q"{Венедикт}"
		, q"{Вениамин}", q"{Вера}", q"{Вероника}", q"{Викентий}", q"{Виктор}"
		, q"{Викторин}", q"{Виктория}", q"{Виссарион}", q"{Виталий}"
		, q"{Владилен}", q"{Владимир}", q"{Владислав}", q"{Владлен}"
		, q"{Влас}", q"{Всеволод}", q"{Всемил}", q"{Всеслав}", q"{Вышеслав}"
		, q"{Вячеслав}", q"{Гаврила}", q"{Галактион}", q"{Галина}"
		, q"{Гедеон}", q"{Геннадий}", q"{Георгий}", q"{Герасим}", q"{Герман}"
		, q"{Глафира}", q"{Глеб}", q"{Гордей}", q"{Гостомысл}", q"{Гремислав}"
		, q"{Григорий}", q"{Гурий}", q"{Давыд}", q"{Данила}", q"{Дарья}"
		, q"{Дементий}", q"{Демид}", q"{Демьян}", q"{Денис}", q"{Дмитрий}"
		, q"{Добромысл}", q"{Доброслав}", q"{Дорофей}", q"{Евгений}"
		, q"{Евгения}", q"{Евграф}", q"{Евдоким}", q"{Евдокия}", q"{Евлампий}"
		, q"{Евпраксия}", q"{Евсей}", q"{Евстафий}", q"{Евстигней}"
		, q"{Евфросиния}", q"{Егор}", q"{Екатерина}", q"{Елена}", q"{Елизавета}"
		, q"{Елизар}", q"{Елисей}", q"{Емельян}", q"{Епифан}", q"{Еремей}"
		, q"{Ермил}", q"{Ермолай}", q"{Ерофей}", q"{Ефим}", q"{Ефрем}"
		, q"{Жанна}", q"{Захар}", q"{Зинаида}", q"{Зиновий}", q"{Зосима}"
		, q"{Зоя}", q"{Иван}", q"{Иванна}", q"{Игнатий}", q"{Игорь}", q"{Измаил}"
		, q"{Изот}", q"{Изяслав}", q"{Иларион}", q"{Илья}", q"{Иннокентий}"
		, q"{Иосиф}", q"{Ипат}", q"{Ипатий}", q"{Ипполит}", q"{Ираида}"
		, q"{Ираклий}", q"{Ирина}", q"{Исай}", q"{Исидор}", q"{Ия}", q"{Казимир}"
		, q"{Каллистрат}", q"{Капитон}", q"{Карл}", q"{Карп}", q"{Касьян}"
		, q"{Ким}", q"{Кир}", q"{Кира}", q"{Кирилл}", q"{Клавдий}", q"{Клавдия}"
		, q"{Климент}", q"{Кондрат}", q"{Кондратий}", q"{Конон}", q"{Константин}"
		, q"{Корнил}", q"{Ксения}", q"{Кузьма}", q"{Куприян}", q"{Лавр}"
		, q"{Лаврентий}", q"{Ладимир}", q"{Ладислав}", q"{Лазарь}"
		, q"{Лариса}", q"{Лев}", q"{Леон}", q"{Леонид}", q"{Леонтий}", q"{Лидия}"
		, q"{Лонгин}", q"{Лора}", q"{Лука}", q"{Лукия}", q"{Лукьян}", q"{Лучезар}"
		, q"{Любим}", q"{Любовь}", q"{Любомир}", q"{Любосмысл}", q"{Людмила}"
		, q"{Майя}", q"{Макар}", q"{Максим}", q"{Максимильян}", q"{Маргарита}"
		, q"{Мариан}", q"{Марина}", q"{Мария}", q"{Марк}", q"{Мартын}"
		, q"{Мартьян}", q"{Марфа}", q"{Матвей}", q"{Мефодий}", q"{Мечислав}"
		, q"{Милан}", q"{Милен}", q"{Милий}", q"{Милица}", q"{Милован}"
		, q"{Мина}", q"{Мир}", q"{Мирон}", q"{Мирослав}", q"{Митофан}"
		, q"{Михаил}", q"{Михей}", q"{Модест}", q"{Моисей}", q"{Мокей}"
		, q"{Мстислав}", q"{Надежда}", q"{Назар}", q"{Наина}", q"{Наркис}"
		, q"{Наталья}", q"{Натан}", q"{Наум}", q"{Нестор}", q"{Никандр}"
		, q"{Никанор}", q"{Никита}", q"{Никифор}", q"{Никодим}", q"{Николай}"
		, q"{Никон}", q"{Нина}", q"{Нинель}", q"{Нифонт}", q"{Нонна}", q"{Оксана}"
		, q"{Октябрина}", q"{Олег}", q"{Олимпиада}", q"{Олимпий}"
		, q"{Ольга}", q"{Онуфрий}", q"{Орест}", q"{Осип}", q"{Остап}", q"{Остромир}"
		, q"{Павел}", q"{Панкрат}", q"{Панкратий}", q"{Пантелеймон}"
		, q"{Панфил}", q"{Парамон}", q"{Парфен}", q"{Пахом}", q"{Пелагея}"
		, q"{Петр}", q"{Пимен}", q"{Платон}", q"{Поликарп}", q"{Полина}"
		, q"{Порфирий}", q"{Потап}", q"{Прасковья}", q"{Пров}", q"{Прокл}"
		, q"{Прокофий}", q"{Прохор}", q"{Радим}", q"{Радислав}", q"{Радован}"
		, q"{Раиса}", q"{Ратибор}", q"{Ратмир}", q"{Регина}", q"{Родион}"
		, q"{Роман}", q"{Ростислав}", q"{Рубен}", q"{Руслан}", q"{Рюрик}"
		, q"{Савва}", q"{Савватий}", q"{Савелий}", q"{Самсон}", q"{Самуил}"
		, q"{Светлана}", q"{Светозар}", q"{Святополк}", q"{Святослав}"
		, q"{Севастьян}", q"{Селиван}", q"{Селиверст}", q"{Семен}"
		, q"{Серафим}", q"{Сергей}", q"{Сигизмунд}", q"{Сидор}", q"{Сила}"
		, q"{Силантий}", q"{Сильвестр}", q"{Симон}", q"{Синклитикия}"
		, q"{Сократ}", q"{Соломон}", q"{София}", q"{Софон}", q"{Софрон}"
		, q"{Спартак}", q"{Спиридон}", q"{Станимир}", q"{Станислав}"
		, q"{Степан}", q"{Стоян}", q"{Таисия}", q"{Тамара}", q"{Тарас}"
		, q"{Татьяна}", q"{Твердислав}", q"{Творимир}", q"{Терентий}"
		, q"{Тимофей}", q"{Тимур}", q"{Тит}", q"{Тихон}", q"{Трифон}", q"{Трофим}"
		, q"{Ульян}", q"{Ульяна}", q"{Устин}", q"{Фадей}", q"{Фаина}", q"{Феврония}"
		, q"{Федор}", q"{Федосий}", q"{Федот}", q"{Феликс}", q"{Феоктист}"
		, q"{Феофан}", q"{Ферапонт}", q"{Филарет}", q"{Филимон}", q"{Филипп}"
		, q"{Фирс}", q"{Флорентин}", q"{Фока}", q"{Фома}", q"{Фортунат}"
		, q"{Фотий}", q"{Фрол}", q"{Фёкла}", q"{Харитон}", q"{Харлампий}"
		, q"{Христофор}", q"{Чеслав}", q"{Эдуард}", q"{Элеонора}"
		, q"{Эмилия}", q"{Эмиль}", q"{Эммануил}", q"{Эраст}", q"{Эрнест}"
		, q"{Эрнст}", q"{Ювеналий}", q"{Юлиан}", q"{Юлий}", q"{Юлия}", q"{Юрий}"
		, q"{Яков}", q"{Якуб}", q"{Ян}", q"{Януарий}", q"{Ярополк}", q"{Ярослав}" ];

		return choice(strs, this.rnd);
	}

	override string personMaleFirstName() {
		const string[] strs =
		[ q"{Август}", q"{Авдей}", q"{Аверкий}", q"{Аверьян}", q"{Авксентий}"
		, q"{Автоном}", q"{Агап}", q"{Агафон}", q"{Аггей}", q"{Адам}", q"{Адриан}"
		, q"{Азарий}", q"{Аким}", q"{Александр}", q"{Алексей}", q"{Амвросий}"
		, q"{Амос}", q"{Ананий}", q"{Анатолий}", q"{Андрей}", q"{Андрон}"
		, q"{Андроник}", q"{Аникей}", q"{Аникита}", q"{Анисим}", q"{Антип}"
		, q"{Антонин}", q"{Аполлинарий}", q"{Аполлон}", q"{Арефий}"
		, q"{Аристарх}", q"{Аркадий}", q"{Арсений}", q"{Артемий}"
		, q"{Артем}", q"{Архип}", q"{Аскольд}", q"{Афанасий}", q"{Афиноген}"
		, q"{Бажен}", q"{Богдан}", q"{Болеслав}", q"{Борис}", q"{Борислав}"
		, q"{Боян}", q"{Бронислав}", q"{Будимир}", q"{Вадим}", q"{Валентин}"
		, q"{Валерий}", q"{Валерьян}", q"{Варлаам}", q"{Варфоломей}"
		, q"{Василий}", q"{Вацлав}", q"{Велимир}", q"{Венедикт}", q"{Вениамин}"
		, q"{Викентий}", q"{Виктор}", q"{Викторин}", q"{Виссарион}"
		, q"{Виталий}", q"{Владилен}", q"{Владлен}", q"{Владимир}"
		, q"{Владислав}", q"{Влас}", q"{Всеволод}", q"{Всемил}", q"{Всеслав}"
		, q"{Вышеслав}", q"{Вячеслав}", q"{Гаврила}", q"{Галактион}"
		, q"{Гедеон}", q"{Геннадий}", q"{Георгий}", q"{Герасим}", q"{Герман}"
		, q"{Глеб}", q"{Гордей}", q"{Гостомысл}", q"{Гремислав}", q"{Григорий}"
		, q"{Гурий}", q"{Давыд}", q"{Данила}", q"{Дементий}", q"{Демид}"
		, q"{Демьян}", q"{Денис}", q"{Дмитрий}", q"{Добромысл}", q"{Доброслав}"
		, q"{Дорофей}", q"{Евгений}", q"{Евграф}", q"{Евдоким}", q"{Евлампий}"
		, q"{Евсей}", q"{Евстафий}", q"{Евстигней}", q"{Егор}", q"{Елизар}"
		, q"{Елисей}", q"{Емельян}", q"{Епифан}", q"{Еремей}", q"{Ермил}"
		, q"{Ермолай}", q"{Ерофей}", q"{Ефим}", q"{Ефрем}", q"{Захар}"
		, q"{Зиновий}", q"{Зосима}", q"{Иван}", q"{Игнатий}", q"{Игорь}"
		, q"{Измаил}", q"{Изот}", q"{Изяслав}", q"{Иларион}", q"{Илья}"
		, q"{Иннокентий}", q"{Иосиф}", q"{Ипат}", q"{Ипатий}", q"{Ипполит}"
		, q"{Ираклий}", q"{Исай}", q"{Исидор}", q"{Казимир}", q"{Каллистрат}"
		, q"{Капитон}", q"{Карл}", q"{Карп}", q"{Касьян}", q"{Ким}", q"{Кир}"
		, q"{Кирилл}", q"{Клавдий}", q"{Климент}", q"{Кондрат}", q"{Кондратий}"
		, q"{Конон}", q"{Константин}", q"{Корнил}", q"{Кузьма}", q"{Куприян}"
		, q"{Лавр}", q"{Лаврентий}", q"{Ладимир}", q"{Ладислав}", q"{Лазарь}"
		, q"{Лев}", q"{Леон}", q"{Леонид}", q"{Леонтий}", q"{Лонгин}", q"{Лука}"
		, q"{Лукьян}", q"{Лучезар}", q"{Любим}", q"{Любомир}", q"{Любосмысл}"
		, q"{Макар}", q"{Максим}", q"{Максимильян}", q"{Мариан}", q"{Марк}"
		, q"{Мартын}", q"{Мартьян}", q"{Матвей}", q"{Мефодий}", q"{Мечислав}"
		, q"{Милан}", q"{Милен}", q"{Милий}", q"{Милован}", q"{Мина}", q"{Мир}"
		, q"{Мирон}", q"{Мирослав}", q"{Митофан}", q"{Михаил}", q"{Михей}"
		, q"{Модест}", q"{Моисей}", q"{Мокей}", q"{Мстислав}", q"{Назар}"
		, q"{Наркис}", q"{Натан}", q"{Наум}", q"{Нестор}", q"{Никандр}"
		, q"{Никанор}", q"{Никита}", q"{Никифор}", q"{Никодим}", q"{Николай}"
		, q"{Никон}", q"{Нифонт}", q"{Олег}", q"{Олимпий}", q"{Онуфрий}"
		, q"{Орест}", q"{Осип}", q"{Остап}", q"{Остромир}", q"{Павел}"
		, q"{Панкратий}", q"{Панкрат}", q"{Пантелеймон}", q"{Панфил}"
		, q"{Парамон}", q"{Парфен}", q"{Пахом}", q"{Петр}", q"{Пимен}"
		, q"{Платон}", q"{Поликарп}", q"{Порфирий}", q"{Потап}", q"{Пров}"
		, q"{Прокл}", q"{Прокофий}", q"{Прохор}", q"{Радим}", q"{Радислав}"
		, q"{Радован}", q"{Ратибор}", q"{Ратмир}", q"{Родион}", q"{Роман}"
		, q"{Ростислав}", q"{Рубен}", q"{Руслан}", q"{Рюрик}", q"{Савва}"
		, q"{Савватий}", q"{Савелий}", q"{Самсон}", q"{Самуил}", q"{Светозар}"
		, q"{Святополк}", q"{Святослав}", q"{Севастьян}", q"{Селиван}"
		, q"{Селиверст}", q"{Семен}", q"{Серафим}", q"{Сергей}", q"{Сигизмунд}"
		, q"{Сидор}", q"{Сила}", q"{Силантий}", q"{Сильвестр}", q"{Симон}"
		, q"{Сократ}", q"{Соломон}", q"{Софон}", q"{Софрон}", q"{Спартак}"
		, q"{Спиридон}", q"{Станимир}", q"{Станислав}", q"{Степан}"
		, q"{Стоян}", q"{Тарас}", q"{Твердислав}", q"{Творимир}", q"{Терентий}"
		, q"{Тимофей}", q"{Тимур}", q"{Тит}", q"{Тихон}", q"{Трифон}", q"{Трофим}"
		, q"{Ульян}", q"{Устин}", q"{Фадей}", q"{Федор}", q"{Федосий}"
		, q"{Федот}", q"{Феликс}", q"{Феоктист}", q"{Феофан}", q"{Ферапонт}"
		, q"{Филарет}", q"{Филимон}", q"{Филипп}", q"{Фирс}", q"{Флорентин}"
		, q"{Фока}", q"{Фома}", q"{Фортунат}", q"{Фотий}", q"{Фрол}", q"{Харитон}"
		, q"{Харлампий}", q"{Христофор}", q"{Чеслав}", q"{Эдуард}"
		, q"{Эммануил}", q"{Эмиль}", q"{Эраст}", q"{Эрнест}", q"{Эрнст}"
		, q"{Ювеналий}", q"{Юлиан}", q"{Юлий}", q"{Юрий}", q"{Яков}", q"{Ян}"
		, q"{Якуб}", q"{Януарий}", q"{Ярополк}", q"{Ярослав}" ];

		return choice(strs, this.rnd);
	}

	string personMaleLastName() {
		const string[] strs =
		[ q"{Смирнов}", q"{Иванов}", q"{Кузнецов}", q"{Попов}", q"{Соколов}"
		, q"{Лебедев}", q"{Козлов}", q"{Новиков}", q"{Морозов}", q"{Петров}"
		, q"{Волков}", q"{Соловьев}", q"{Васильев}", q"{Зайцев}", q"{Павлов}"
		, q"{Семенов}", q"{Голубев}", q"{Виноградов}", q"{Богданов}"
		, q"{Воробьев}", q"{Федоров}", q"{Михайлов}", q"{Беляев}"
		, q"{Тарасов}", q"{Белов}", q"{Комаров}", q"{Орлов}", q"{Киселев}"
		, q"{Макаров}", q"{Андреев}", q"{Ковалев}", q"{Ильин}", q"{Гусев}"
		, q"{Титов}", q"{Кузьмин}", q"{Кудрявцев}", q"{Баранов}", q"{Куликов}"
		, q"{Алексеев}", q"{Степанов}", q"{Яковлев}", q"{Сорокин}"
		, q"{Сергеев}", q"{Романов}", q"{Захаров}", q"{Борисов}", q"{Королев}"
		, q"{Герасимов}", q"{Пономарев}", q"{Григорьев}", q"{Лазарев}"
		, q"{Медведев}", q"{Ершов}", q"{Никитин}", q"{Соболев}", q"{Рябов}"
		, q"{Поляков}", q"{Цветков}", q"{Данилов}", q"{Жуков}", q"{Фролов}"
		, q"{Журавлев}", q"{Николаев}", q"{Крылов}", q"{Максимов}"
		, q"{Сидоров}", q"{Осипов}", q"{Белоусов}", q"{Федотов}", q"{Дорофеев}"
		, q"{Егоров}", q"{Матвеев}", q"{Бобров}", q"{Дмитриев}", q"{Калинин}"
		, q"{Анисимов}", q"{Петухов}", q"{Антонов}", q"{Тимофеев}"
		, q"{Никифоров}", q"{Веселов}", q"{Филиппов}", q"{Марков}"
		, q"{Большаков}", q"{Суханов}", q"{Миронов}", q"{Ширяев}"
		, q"{Александров}", q"{Коновалов}", q"{Шестаков}", q"{Казаков}"
		, q"{Ефимов}", q"{Денисов}", q"{Громов}", q"{Фомин}", q"{Давыдов}"
		, q"{Мельников}", q"{Щербаков}", q"{Блинов}", q"{Колесников}"
		, q"{Карпов}", q"{Афанасьев}", q"{Власов}", q"{Маслов}", q"{Исаков}"
		, q"{Тихонов}", q"{Аксенов}", q"{Гаврилов}", q"{Родионов}"
		, q"{Котов}", q"{Горбунов}", q"{Кудряшов}", q"{Быков}", q"{Зуев}"
		, q"{Третьяков}", q"{Савельев}", q"{Панов}", q"{Рыбаков}"
		, q"{Суворов}", q"{Абрамов}", q"{Воронов}", q"{Мухин}", q"{Архипов}"
		, q"{Трофимов}", q"{Мартынов}", q"{Емельянов}", q"{Горшков}"
		, q"{Чернов}", q"{Овчинников}", q"{Селезнев}", q"{Панфилов}"
		, q"{Копылов}", q"{Михеев}", q"{Галкин}", q"{Назаров}", q"{Лобанов}"
		, q"{Лукин}", q"{Беляков}", q"{Потапов}", q"{Некрасов}", q"{Хохлов}"
		, q"{Жданов}", q"{Наумов}", q"{Шилов}", q"{Воронцов}", q"{Ермаков}"
		, q"{Дроздов}", q"{Игнатьев}", q"{Савин}", q"{Логинов}", q"{Сафонов}"
		, q"{Капустин}", q"{Кириллов}", q"{Моисеев}", q"{Елисеев}"
		, q"{Кошелев}", q"{Костин}", q"{Горбачев}", q"{Орехов}", q"{Ефремов}"
		, q"{Исаев}", q"{Евдокимов}", q"{Калашников}", q"{Кабанов}"
		, q"{Носков}", q"{Юдин}", q"{Кулагин}", q"{Лапин}", q"{Прохоров}"
		, q"{Нестеров}", q"{Харитонов}", q"{Агафонов}", q"{Муравьев}"
		, q"{Ларионов}", q"{Федосеев}", q"{Зимин}", q"{Пахомов}", q"{Шубин}"
		, q"{Игнатов}", q"{Филатов}", q"{Крюков}", q"{Рогов}", q"{Кулаков}"
		, q"{Терентьев}", q"{Молчанов}", q"{Владимиров}", q"{Артемьев}"
		, q"{Гурьев}", q"{Зиновьев}", q"{Гришин}", q"{Кононов}", q"{Дементьев}"
		, q"{Ситников}", q"{Симонов}", q"{Мишин}", q"{Фадеев}", q"{Комиссаров}"
		, q"{Мамонтов}", q"{Носов}", q"{Гуляев}", q"{Шаров}", q"{Устинов}"
		, q"{Вишняков}", q"{Евсеев}", q"{Лаврентьев}", q"{Брагин}"
		, q"{Константинов}", q"{Корнилов}", q"{Авдеев}", q"{Зыков}"
		, q"{Бирюков}", q"{Шарапов}", q"{Никонов}", q"{Щукин}", q"{Дьячков}"
		, q"{Одинцов}", q"{Сазонов}", q"{Якушев}", q"{Красильников}"
		, q"{Гордеев}", q"{Самойлов}", q"{Князев}", q"{Беспалов}"
		, q"{Уваров}", q"{Шашков}", q"{Бобылев}", q"{Доронин}", q"{Белозеров}"
		, q"{Рожков}", q"{Самсонов}", q"{Мясников}", q"{Лихачев}"
		, q"{Буров}", q"{Сысоев}", q"{Фомичев}", q"{Русаков}", q"{Стрелков}"
		, q"{Гущин}", q"{Тетерин}", q"{Колобов}", q"{Субботин}", q"{Фокин}"
		, q"{Блохин}", q"{Селиверстов}", q"{Пестов}", q"{Кондратьев}"
		, q"{Силин}", q"{Меркушев}", q"{Лыткин}", q"{Туров}" ];

		return choice(strs, this.rnd);
	}

	override string personMaleMiddleName() {
		const string[] strs =
		[ q"{Ааронович}", q"{Абрамович}", q"{Августович}", q"{Авдеевич}"
		, q"{Аверьянович}", q"{Адамович}", q"{Адрианович}", q"{Аксёнович}"
		, q"{Александрович}", q"{Алексеевич}", q"{Анатольевич}"
		, q"{Андреевич}", q"{Анисимович}", q"{Антипович}", q"{Антонович}"
		, q"{Ануфриевич}", q"{Арсенович}", q"{Арсеньевич}", q"{Артёмович}"
		, q"{Артемьевич}", q"{Артурович}", q"{Архипович}", q"{Афанасьевич}"
		, q"{Бенедиктович}", q"{Богданович}", q"{Бориславович}"
		, q"{Борисович}", q"{Брониславович}", q"{Валентинович}"
		, q"{Валерианович}", q"{Валерьевич}", q"{Валерьянович}"
		, q"{Васильевич}", q"{Венедиктович}", q"{Викентьевич}"
		, q"{Викторович}", q"{Виленович}", q"{Вилорович}", q"{Витальевич}"
		, q"{Владиленович}", q"{Владиславович}", q"{Владленович}"
		, q"{Власович}", q"{Всеволодович}", q"{Вячеславович}"
		, q"{Гавриилович}", q"{Гаврилович}", q"{Геннадиевич}"
		, q"{Георгиевич}", q"{Герасимович}", q"{Германович}"
		, q"{Гертрудович}", q"{Глебович}", q"{Гордеевич}", q"{Григорьевич}"
		, q"{Гурьевич}", q"{Давидович}", q"{Давыдович}", q"{Даниилович}"
		, q"{Данилович}", q"{Демидович}", q"{Демьянович}", q"{Денисович}"
		, q"{Димитриевич}", q"{Дмитриевич}", q"{Дорофеевич}"
		, q"{Евсеевич}", q"{Евстигнеевич}", q"{Егорович}", q"{Елизарович}"
		, q"{Елисеевич}", q"{Еремеевич}", q"{Ермилович}", q"{Ермолаевич}"
		, q"{Ерофеевич}", q"{Ефимович}", q"{Ефимьевич}", q"{Ефремович}"
		, q"{Ефстафьевич}", q"{Жанович}", q"{Жоресович}", q"{Захарьевич}"
		, q"{Зиновьевич}", q"{Игнатович}", q"{Игнатьевич}", q"{Игоревич}"
		, q"{Измаилович}", q"{Изотович}", q"{Иларионович}", q"{Ильич}"
		, q"{Ильясович}", q"{Иосипович}", q"{Иосифович}", q"{Исидорович}"
		, q"{Марсович}", q"{Матвеевич}", q"{Тарасович}", q"{Теймуразович}"
		, q"{Терентьевич}", q"{Тимурович}", q"{Тихонович}", q"{Трифонович}"
		, q"{Трофимович}", q"{Устинович}", q"{Фадеевич}", q"{Фёдорович}"
		, q"{Федосеевич}", q"{Федосьевич}", q"{Федотович}", q"{Феликсович}"
		, q"{Феодосьевич}", q"{Феоктистович}", q"{Феофанович}"
		, q"{Филатович}", q"{Филимонович}", q"{Филиппович}", q"{Фокич}"
		, q"{Фомич}", q"{Фролович}", q"{Харитонович}", q"{Харламович}"
		, q"{Харлампович}", q"{Харлампьевич}", q"{Чеславович}"
		, q"{Эдгардович}", q"{Эдгарович}", q"{Эдуардович}", q"{Юлианович}"
		, q"{Юльевич}", q"{Яковлевич}", q"{Якубович}", q"{Ярославович}" ];

		return choice(strs, this.rnd);
	}

	override string personName() {
		const int rndInt = uniform(0, 4, this.rnd);

		if(rndInt >= 0 && rndInt < 1) {
			return personFirstName() ~ " " ~ personLastName();
		}
		if(rndInt >= 1 && rndInt < 2) {
			return personLastName() ~ " " ~ personFirstName();
		}
		if(rndInt >= 2 && rndInt < 3) {
			return personFirstName() ~ " " ~ personMiddleName() ~ " " ~ personLastName();
		}
		if(rndInt >= 3 && rndInt < 4) {
			return personLastName() ~ " " ~ personFirstName() ~ " " ~ personMiddleName();
		}

		return "";
	}

	override string personTitleDescriptor() {
		const string[] strs =
		[ q"{Ведущий}", q"{Генеральный}", q"{Главный}", q"{Глобальный}"
		, q"{Международный}", q"{Национальный}", q"{Областной}"
		, q"{Районный}", q"{Региональный}", q"{Центральный}" ];

		return choice(strs, this.rnd);
	}

	override string personTitleLevel() {
		const string[] strs =
		[ q"{интеграционный}", q"{логистический}", q"{маркетинговый}"
		, q"{оптимизационный}", q"{страховой}", q"{функциональный}"
		, q"{коммуникационный}", q"{операционный}" ];

		return choice(strs, this.rnd);
	}

	override string personTitleJob() {
		const string[] strs =
		[ q"{агент}", q"{администратор}", q"{аналитик}", q"{архитектор}"
		, q"{дизайнер}", q"{инженер}", q"{консультант}", q"{координатор}"
		, q"{менеджер}", q"{планировщик}", q"{помощник}", q"{разработчик}"
		, q"{руководитель}", q"{сотрудник}", q"{специалист}"
		, q"{техник}" ];

		return choice(strs, this.rnd);
	}

	override string phoneNumberFormats() {
		const string[] strs =
		[ q"{(9##)###-##-##}" ];

		return numberBuild(choice(strs, this.rnd));
	}

}
